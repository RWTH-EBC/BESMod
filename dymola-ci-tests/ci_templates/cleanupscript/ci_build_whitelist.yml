stages:    - build_ci_whitelistCI_Whitelist_Setting:    stage: build_ci_whitelist    before_script:        - source activate myenv        - export PYTHONIOENCODING=utf-8        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "$GITLAB_USER_NAME"        - git config --global user.email "$GITLAB_USER_EMAIL"    script:        - mkdir build_whitelist        - cd build_whitelist        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git        - cd $CI_PROJECT_NAME        - git clone https://github.com/RWTH-EBC/MoCITempGen        - python MoCITempGen/CITests/CI_Configuration/configuration.py create-whitelist        - python MoCITempGen/CITests/SyntaxTests/html_tidy_errors.py --whitelist        - xvfb-run -n 77 python MoCITempGen/CITests/UnitTests/CheckPackages/validatetest.py -DS 2022 --repo-dir BESMod   --library BESMod --wh-library BESMod --whitelist        - xvfb-run -n 77 python MoCITempGen/CITests/UnitTests/CheckPackages/validatetest.py -DS 2022 --repo-dir BESMod   --library BESMod --wh-library BESMod --whitelist --simulate-examples        - message="CI message from ebc-aixlib-bot. Push new created whitelists."        - push_model=$(git ls-files --others --exclude-standard --directory dymola-ci-tests)        - git add  $push_model        - git commit -m "$message"        - git push --force git@github.com:$Github_Repository.git    only:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_build_whitelist/    except:        refs:            - external_pull_requests    artifacts:        paths:            - dymola-ci-tests        expire_in: 7h