 = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly");
Check of BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly
The model has the same number of unknowns and equations: 410
The model could not be deduced to be symbolically well-posed.
The model has
  404+pumDHW.vol.dynBal.nPorts+volSup[1].dynBal.nPorts+volDem[1].dynBal.nPorts
scalar unknowns and
  382+(if distribution.bouPum.use_Xi_in then 1 else (if distribution.bouPum.use_X_in   then 0 else 1))+(if  not distribution.bouPum.use_p_in then 1 else 0)+(if    not distribution.bouPum.use_T_in then 1 else 0)+(if bouDHW.use_Xi_in then 1   else (if bouDHW.use_X_in then 0 else 1))+(if  not bouDHW.use_p_in then 1   else 0)+(if  not bouDHW.use_T_in then 1 else 0)+(if  not pumDHW.vol.dynBal.use_mWat_flow   then 1 else 0)+3*pumDHW.vol.dynBal.nPorts+(if  not volSup[1].dynBal.use_mWat_flow   then 1 else 0)+3*volSup[1].dynBal.nPorts+(if  not volDem[1].dynBal.use_mWat_flow   then 1 else 0)+3*volDem[1].dynBal.nPorts+(if  not distribution.pump.dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  410
Check of BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/BuildingOnly.mos\",", "BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly\",", "BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly\\\");\",", "BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/BuildingOnly.mos");
simulateModel("BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly");
Translation of BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly
The DAE has 410 scalar unknowns and 410 scalar equations.
 
Statistics
 
Original Model
  Number of components: 132
  Variables: 1339
  Constants: 25 (25 scalars)
  Parameters: 746 (1119 scalars)
  Unknowns: 568 (438 scalars)
  Differentiated variables: 6 scalars
  Equations: 494
  Nontrivial: 388
Translated Model
  Constants: 685 scalars
  Free parameters: 96 scalars
  Parameter depending: 515 scalars
  Outputs: 1 scalars
  Continuous time states: 1 scalars
  Time-varying variables: 29 scalars
  Alias variables: 257 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {1}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {8, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
pumDHW.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Distribution.Tests.BuildingOnly.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem");
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem
The model has the same number of unknowns and equations: 688
The model could not be deduced to be symbolically well-posed.
The model has
  652+2*transfer.parRad.nEle+transfer.rad[1].vol[1].dynBal.nPorts+transfer.rad[1].vol[2].dynBal.nPorts  +transfer.rad[1].vol[3].dynBal.nPorts+transfer.rad[1].vol[4].dynBal.nPorts+  transfer.rad[1].vol[5].dynBal.nPorts+transfer.rad[1].sumCon.nin+  transfer.rad[1].sumRad.nin+transfer.volSup.dynBal.nPorts+transfer.volRet.dynBal.nPorts  +vol[1].dynBal.nPorts
scalar unknowns and
  616+(if bou1[1].use_Xi_in then 1 else (if bou1[1].use_X_in then 0 else 1))+(if    not bou1[1].use_p_in then 1 else 0)+2*bou1[1].nPorts+(if  not   bou1[1].use_T_in then 1 else 0)+(if  not transfer.rad[1].vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*transfer.rad[1].vol[1].dynBal.nPorts+(if  not   transfer.rad[1].vol[2].dynBal.use_mWat_flow then 1 else 0)+3*transfer.rad[1].vol[2].dynBal.nPorts  +(if  not transfer.rad[1].vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  transfer.rad[1].vol[3].dynBal.nPorts+(if  not transfer.rad[1].vol[4].dynBal.use_mWat_flow   then 1 else 0)+3*transfer.rad[1].vol[4].dynBal.nPorts+(if  not   transfer.rad[1].vol[5].dynBal.use_mWat_flow then 1 else 0)+3*transfer.rad[1].vol[5].dynBal.nPorts  +(if  not transfer.volSup.dynBal.use_mWat_flow then 1 else 0)+3*  transfer.volSup.dynBal.nPorts+(if  not transfer.volRet.dynBal.use_mWat_flow   then 1 else 0)+3*transfer.volRet.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)+2*transfer.parRad.nEle
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  688
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestPressureBasedSystem.mos\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem\\\");\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestPressureBasedSystem.mos");
simulateModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem", stopTime=12000, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem");
Translation of BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem
The DAE has 688 scalar unknowns and 688 scalar equations.
 
Statistics
 
Original Model
  Number of components: 179
  Variables: 1950
  Constants: 45 (45 scalars)
  Parameters: 964 (1084 scalars)
  Unknowns: 941 (721 scalars)
  Differentiated variables: 16 scalars
  Equations: 745
  Nontrivial: 556
Translated Model
  Constants: 952 scalars
  Free parameters: 85 scalars
  Parameter depending: 296 scalars
  Outputs: 1 scalars
  Continuous time states: 7 scalars
  Time-varying variables: 154 scalars
  Alias variables: 363 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {11, 1}
  Sizes after manipulation of the nonlinear systems: {1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {11, 11, 1, 1}
    Sizes after manipulation of the nonlinear systems: {5, 1, 0, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {11, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {1, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
transfer.rad[1].vol[1].dynBal.U
transfer.rad[1].vol[2].dynBal.U
transfer.rad[1].vol[3].dynBal.U
transfer.rad[1].vol[4].dynBal.U
transfer.rad[1].vol[5].dynBal.U
transfer.volRet.dynBal.U
transfer.volSup.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystem.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries");
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries
The model has the same number of unknowns and equations: 1397
The model could not be deduced to be symbolically well-posed.
The model has
  1378+generation.heatPump.con.vol.dynBal.nPorts+2*generation.heatPump.eva.vol.dynBal.nPorts  +size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns, 1)+  generation.heatPump.safCtr.opeEnv.bouMapHea.nor.nu+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapCoo.nor.nu+generation.multiSum.nu+  generation.boi.vol.dynBal.nPorts+vol[1].dynBal.nPorts
scalar unknowns and
  1346+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if generation.bou_sinkAir.use_Xi_in   then 2 else (if generation.bou_sinkAir.use_X_in then 1 else 3))+(if  not   generation.bou_sinkAir.use_p_in then 1 else 0)+(if  not generation.bou_sinkAir.use_h_in   then 1 else 0)+(if generation.bouEva.use_Xi_in then 2 else (if   generation.bouEva.use_X_in then 1 else 3))+(if bouTra[1].use_Xi_in then 1   else (if bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1   else 0)+(if  not bouTra[1].use_T_in then 1 else 0)+(if  not generation.heatPump.con.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.heatPump.con.vol.dynBal.nPorts+(if  not   generation.heatPump.eva.vol.dynBal.use_mWat_flow then 1 else 0)+5*  generation.heatPump.eva.vol.dynBal.nPorts+size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns,   1)+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns, 1)+(if    not generation.boi.vol.dynBal.use_mWat_flow then 1 else 0)+3*generation.boi.vol.dynBal.nPorts  +(if  not vol[1].dynBal.use_mWat_flow then 1 else 0)+3*vol[1].dynBal.nPorts+(  if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1397
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPumpAndGasBoilerSeries.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPumpAndGasBoilerSeries.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries
The DAE has 1397 scalar unknowns and 1397 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
  if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
      generation.heatPump.eva.vol.dynBal.medium.p = generation.heatPump.eva.vol.dynBal.p_start;
    end if;
  else
    if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
        der(generation.heatPump.eva.vol.dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    generation.bou_sinkAir.p(start = 101325)
 
The redundancies involve
initial equations: 
  generation.heatPump.eva.vol.dynBal.medium.p = 101325.0;
  320.15 = 320.15;
 
 
Statistics
 
Original Model
  Number of components: 350
  Variables: 2798
  Constants: 50 (50 scalars)
  Parameters: 1426 (2046 scalars)
  Unknowns: 1322 (1436 scalars)
  Differentiated variables: 19 scalars
  Equations: 1304
  Nontrivial: 1115
Translated Model
  Constants: 1216 scalars
  Free parameters: 337 scalars
  Parameter depending: 869 scalars
  Outputs: 8 scalars
  Continuous time states: 13 scalars
  Time-varying variables: 232 scalars
  Alias variables: 878 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {4}
  Sizes after manipulation of the linear systems: {0}
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {9, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.boi.internalCapacity.T
generation.boi.senTCold.T
generation.boi.senTHot.T
generation.heatPump.con.vol.dynBal.U
generation.heatPump.eva.vol.dynBal.medium.Xi[1]
generation.heatPump.eva.vol.dynBal.U
generation.KPIBoi.integrator2.y
generation.KPIBoiFue.integrator2.y
generation.KPIHeaPum.integrator1.y
generation.KPIHeaPum.integrator3.y
generation.KPIQHP.integrator2.y
generation.KPIWel.integrator2.y
generation.senTGenOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerSeries.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage");
Check of BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage
In value attribute for resTra[1].m_flow_nominal.
Modifier applied in class BESMod.Systems.Hydraulical.Distribution.Tests.BaseClasses.PartialTest.
  File: /tmp/tmp-BESMod-0-wtbrr1q7/BESMod/Systems/Hydraulical/Distribution/Tests/CombiStorage.mo, line 3
Modifier applied for component resTra.m_flow_nominal.
  File: /builds/EBC/EBC_all/github_ci/BESMod/installed_dependencies/IBPSA/IBPSA/Fluid/Interfaces/PartialTwoPortInterface.mo, line 8
Variable found in class BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.
  Near file: /tmp/tmp-BESMod-0-wtbrr1q7/BESMod/Systems/Hydraulical/Distribution/Tests/CombiStorage.mo, line 2
Variable found in base-class resTra.PartialTwoPortInterface.
  Near file: /builds/EBC/EBC_all/github_ci/BESMod/installed_dependencies/IBPSA/IBPSA/Fluid/BaseClasses/PartialResistance.mo, line 3
Warning: Error for array of components: Modifier(=fill(sum(distribution.Q_flow_design)/dTDem_nominal/4184, distribution.nParallelSup)) dimension 1 is 2, but the modifee expected 1.
 
The model has the same number of unknowns and equations: 8547
Check of BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage successful.
Warning: WARNINGS have been issued.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/CombiStorage.mos\",", "BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage\",", "BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage\\\");\",", "BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/CombiStorage.mos");
simulateModel("BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage");
Translation of BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage
In value attribute for resTra[1].m_flow_nominal.
Modifier applied in class BESMod.Systems.Hydraulical.Distribution.Tests.BaseClasses.PartialTest.
  File: /tmp/tmp-BESMod-0-wtbrr1q7/BESMod/Systems/Hydraulical/Distribution/Tests/CombiStorage.mo, line 3
Modifier applied for component resTra.m_flow_nominal.
  File: /builds/EBC/EBC_all/github_ci/BESMod/installed_dependencies/IBPSA/IBPSA/Fluid/Interfaces/PartialTwoPortInterface.mo, line 8
Variable found in class BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.
  Near file: /tmp/tmp-BESMod-0-wtbrr1q7/BESMod/Systems/Hydraulical/Distribution/Tests/CombiStorage.mo, line 2
Variable found in base-class resTra.PartialTwoPortInterface.
  Near file: /builds/EBC/EBC_all/github_ci/BESMod/installed_dependencies/IBPSA/IBPSA/Fluid/BaseClasses/PartialResistance.mo, line 3
Warning: Error for array of components: Modifier(=fill(sum(distribution.Q_flow_design)/dTDem_nominal/4184, distribution.nParallelSup)) dimension 1 is 2, but the modifee expected 1.
 
The DAE has 8547 scalar unknowns and 8547 scalar equations.
 
Statistics
 
Original Model
  Number of components: 1757
  Variables: 22995
  Constants: 424 (424 scalars)
  Parameters: 10873 (11192 scalars)
  Unknowns: 11698 (8842 scalars)
  Differentiated variables: 273 scalars
  Equations: 9105
  Nontrivial: 6888
Translated Model
  Constants: 8545 scalars
  Free parameters: 722 scalars
  Parameter depending: 3711 scalars
  Outputs: 6 scalars
  Continuous time states: 186 scalars
  Time-varying variables: 1949 scalars
  Alias variables: 5531 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 3, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 1}
  Sizes after manipulation of the nonlinear systems: {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {26, 4, 6, 1, 1, 1, 1, 1}
    Sizes after manipulation of the nonlinear systems: {2, 1, 1, 0, 1, 1, 1, 1}
    Number of numerical Jacobians: 0
 
Sparse solvers enabled: false
Enabled for integrator Jacobian: false
Model sparse and large enough: true.
Sparse solvers are available for dassl, lsodar, cvode, ida, radau, esdirk*, sdirk*.
Enable sparse solvers by setting Advanced.Translation.SparseActivate.
Selected continuous time states
Statically selected continuous time states
distribution.bufSto.bottomCover.loadIns.T
distribution.bufSto.bottomCover.loadWall.T
distribution.bufSto.heatingCoil1.pipe[1].del.x
distribution.bufSto.heatingCoil1.pipe[1].timDel.x
distribution.bufSto.heatingCoil1.pipe[1].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[1].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[2].del.x
distribution.bufSto.heatingCoil1.pipe[2].timDel.x
distribution.bufSto.heatingCoil1.pipe[2].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[2].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[3].del.x
distribution.bufSto.heatingCoil1.pipe[3].timDel.x
distribution.bufSto.heatingCoil1.pipe[3].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[3].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[4].del.x
distribution.bufSto.heatingCoil1.pipe[4].timDel.x
distribution.bufSto.heatingCoil1.pipe[4].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[4].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[5].del.x
distribution.bufSto.heatingCoil1.pipe[5].timDel.x
distribution.bufSto.heatingCoil1.pipe[5].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[5].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[6].del.x
distribution.bufSto.heatingCoil1.pipe[6].timDel.x
distribution.bufSto.heatingCoil1.pipe[6].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[6].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[7].del.x
distribution.bufSto.heatingCoil1.pipe[7].timDel.x
distribution.bufSto.heatingCoil1.pipe[7].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[7].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[8].del.x
distribution.bufSto.heatingCoil1.pipe[8].timDel.x
distribution.bufSto.heatingCoil1.pipe[8].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[8].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[9].del.x
distribution.bufSto.heatingCoil1.pipe[9].timDel.x
distribution.bufSto.heatingCoil1.pipe[9].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[9].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[10].del.x
distribution.bufSto.heatingCoil1.pipe[10].timDel.x
distribution.bufSto.heatingCoil1.pipe[10].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[10].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[11].del.x
distribution.bufSto.heatingCoil1.pipe[11].timDel.x
distribution.bufSto.heatingCoil1.pipe[11].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[11].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[12].del.x
distribution.bufSto.heatingCoil1.pipe[12].timDel.x
distribution.bufSto.heatingCoil1.pipe[12].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[12].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[13].del.x
distribution.bufSto.heatingCoil1.pipe[13].timDel.x
distribution.bufSto.heatingCoil1.pipe[13].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[13].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[14].del.x
distribution.bufSto.heatingCoil1.pipe[14].timDel.x
distribution.bufSto.heatingCoil1.pipe[14].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[14].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[15].del.x
distribution.bufSto.heatingCoil1.pipe[15].timDel.x
distribution.bufSto.heatingCoil1.pipe[15].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[15].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[16].del.x
distribution.bufSto.heatingCoil1.pipe[16].timDel.x
distribution.bufSto.heatingCoil1.pipe[16].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[16].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[17].del.x
distribution.bufSto.heatingCoil1.pipe[17].timDel.x
distribution.bufSto.heatingCoil1.pipe[17].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[17].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[18].del.x
distribution.bufSto.heatingCoil1.pipe[18].timDel.x
distribution.bufSto.heatingCoil1.pipe[18].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[18].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[19].del.x
distribution.bufSto.heatingCoil1.pipe[19].timDel.x
distribution.bufSto.heatingCoil1.pipe[19].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[19].vol_b.dynBal.U
distribution.bufSto.heatingCoil1.pipe[20].del.x
distribution.bufSto.heatingCoil1.pipe[20].timDel.x
distribution.bufSto.heatingCoil1.pipe[20].vol_a.dynBal.U
distribution.bufSto.heatingCoil1.pipe[20].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[1].del.x
distribution.bufSto.heatingCoil2.pipe[1].timDel.x
distribution.bufSto.heatingCoil2.pipe[1].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[1].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[2].del.x
distribution.bufSto.heatingCoil2.pipe[2].timDel.x
distribution.bufSto.heatingCoil2.pipe[2].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[2].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[3].del.x
distribution.bufSto.heatingCoil2.pipe[3].timDel.x
distribution.bufSto.heatingCoil2.pipe[3].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[3].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[4].del.x
distribution.bufSto.heatingCoil2.pipe[4].timDel.x
distribution.bufSto.heatingCoil2.pipe[4].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[4].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[5].del.x
distribution.bufSto.heatingCoil2.pipe[5].timDel.x
distribution.bufSto.heatingCoil2.pipe[5].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[5].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[6].del.x
distribution.bufSto.heatingCoil2.pipe[6].timDel.x
distribution.bufSto.heatingCoil2.pipe[6].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[6].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[7].del.x
distribution.bufSto.heatingCoil2.pipe[7].timDel.x
distribution.bufSto.heatingCoil2.pipe[7].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[7].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[8].del.x
distribution.bufSto.heatingCoil2.pipe[8].timDel.x
distribution.bufSto.heatingCoil2.pipe[8].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[8].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[9].del.x
distribution.bufSto.heatingCoil2.pipe[9].timDel.x
distribution.bufSto.heatingCoil2.pipe[9].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[9].vol_b.dynBal.U
distribution.bufSto.heatingCoil2.pipe[10].del.x
distribution.bufSto.heatingCoil2.pipe[10].timDel.x
distribution.bufSto.heatingCoil2.pipe[10].vol_a.dynBal.U
distribution.bufSto.heatingCoil2.pipe[10].vol_b.dynBal.U
distribution.bufSto.layer[1].dynBal.U
distribution.bufSto.layer[2].dynBal.U
distribution.bufSto.layer[3].dynBal.U
distribution.bufSto.layer[4].dynBal.U
distribution.bufSto.layer[5].dynBal.U
distribution.bufSto.layer[6].dynBal.U
distribution.bufSto.layer[7].dynBal.U
distribution.bufSto.layer[8].dynBal.U
distribution.bufSto.layer[9].dynBal.U
distribution.bufSto.layer[10].dynBal.U
distribution.bufSto.layer[11].dynBal.U
distribution.bufSto.layer[12].dynBal.U
distribution.bufSto.layer[13].dynBal.U
distribution.bufSto.layer[14].dynBal.U
distribution.bufSto.layer[15].dynBal.U
distribution.bufSto.layer[16].dynBal.U
distribution.bufSto.layer[17].dynBal.U
distribution.bufSto.layer[18].dynBal.U
distribution.bufSto.layer[19].dynBal.U
distribution.bufSto.layer[20].dynBal.U
distribution.bufSto.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[5].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[5].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[6].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[6].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[7].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[7].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[8].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[8].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[9].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[9].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[10].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[10].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[11].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[11].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[12].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[12].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[13].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[13].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[14].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[14].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[15].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[15].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[16].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[16].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[17].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[17].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[18].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[18].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[19].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[19].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[20].Insulation.CylindricLoad1.heatCapacitor.T
distribution.bufSto.storageMantle[20].Wall.CylindricLoad1.heatCapacitor.T
distribution.bufSto.topCover.loadIns.T
distribution.bufSto.topCover.loadWall.T
distribution.eneKPICal.integrator2.y
pumDHW.vol.dynBal.U
Finished
Warning: WARNINGS have been issued.
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Distribution.Tests.CombiStorage.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump");
Check of BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump
The model has the same number of unknowns and equations: 2157
The model could not be deduced to be symbolically well-posed.
The model has
  2095+6*generation.solCol.nSeg+generation.heatPump.con.vol.dynBal.nPorts+2*  generation.heatPump.eva.vol.dynBal.nPorts+size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapHea.nor.nu+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapCoo.nor.nu+generation.multiSum.nu+  generation.eleHea.vol.dynBal.nPorts+generation.solCol.vol[1].dynBal.nPorts+  generation.solCol.vol[2].dynBal.nPorts+generation.solCol.vol[3].dynBal.nPorts+  generation.solCol.vol[4].dynBal.nPorts+generation.solCol.vol[5].dynBal.nPorts+  vol[1].dynBal.nPorts+vol[2].dynBal.nPorts
scalar unknowns and
  2038+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if generation.bou_sinkAir.use_Xi_in   then 2 else (if generation.bou_sinkAir.use_X_in then 1 else 3))+(if  not   generation.bou_sinkAir.use_p_in then 1 else 0)+(if  not generation.bou_sinkAir.use_h_in   then 1 else 0)+(if generation.bouEva.use_Xi_in then 2 else (if   generation.bouEva.use_X_in then 1 else 3))+2*(if  not generation.solCol.use_shaCoe_in   then 1 else 0)+4*generation.solCol.nSeg+(if bouTra[1].use_Xi_in then 1 else (  if bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1 else 0)  +(if  not bouTra[1].use_T_in then 1 else 0)+(if bouTra[2].use_Xi_in then 1   else (if bouTra[2].use_X_in then 0 else 1))+(if  not bouTra[2].use_p_in then 1   else 0)+(if  not bouTra[2].use_T_in then 1 else 0)+(if  not generation.heatPump.con.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.heatPump.con.vol.dynBal.nPorts+(if  not   generation.heatPump.eva.vol.dynBal.use_mWat_flow then 1 else 0)+5*  generation.heatPump.eva.vol.dynBal.nPorts+size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns,   1)+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns, 1)+(if    not generation.eleHea.vol.dynBal.use_mWat_flow then 1 else 0)+3*  generation.eleHea.vol.dynBal.nPorts+(if  not generation.solCol.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*generation.solCol.vol[1].dynBal.nPorts+(if  not   generation.solCol.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  generation.solCol.vol[2].dynBal.nPorts+(if  not generation.solCol.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*generation.solCol.vol[3].dynBal.nPorts+(if  not   generation.solCol.vol[4].dynBal.use_mWat_flow then 1 else 0)+3*  generation.solCol.vol[4].dynBal.nPorts+(if  not generation.solCol.vol[5].dynBal.use_mWat_flow   then 1 else 0)+3*generation.solCol.vol[5].dynBal.nPorts+(if  not   vol[1].dynBal.use_mWat_flow then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not   vol[2].dynBal.use_mWat_flow then 1 else 0)+3*vol[2].dynBal.nPorts+(if  not   pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(if  not   pumDis[2].dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2157
Check of BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/DetailedSolarThermalWithHeatPump.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump\",", "BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/DetailedSolarThermalWithHeatPump.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump
The DAE has 2157 scalar unknowns and 2157 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
  if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
      generation.heatPump.eva.vol.dynBal.medium.p = generation.heatPump.eva.vol.dynBal.p_start;
    end if;
  else
    if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
        der(generation.heatPump.eva.vol.dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
  if (vol[2].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[2].dynBal.medium.T = vol[2].dynBal.T_start;
  else
    if (vol[2].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[2].dynBal.medium.T) = 0;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    generation.bou_sinkAir.p(start = 101325)
 
The redundancies involve
initial equations: 
  generation.heatPump.eva.vol.dynBal.medium.p = 101325.0;
  320.15 = 320.15;
  vol[2].dynBal.medium.T = vol[2].dynBal.T_start;
 
 
Statistics
 
Original Model
  Number of components: 510
  Variables: 4508
  Constants: 96 (96 scalars)
  Parameters: 2151 (2863 scalars)
  Unknowns: 2261 (2225 scalars)
  Differentiated variables: 31 scalars
  Equations: 1980
  Nontrivial: 1632
Translated Model
  Constants: 1863 scalars
  Free parameters: 391 scalars
  Parameter depending: 1176 scalars
  Outputs: 7 scalars
  Continuous time states: 19 scalars
  Time-varying variables: 365 scalars
  Alias variables: 1389 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {9, 8, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1, 1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.eleHea.vol.dynBal.U
generation.heatPump.con.vol.dynBal.U
generation.heatPump.eva.vol.dynBal.medium.Xi[1]
generation.heatPump.eva.vol.dynBal.U
generation.KPIEleHea.integrator1.y
generation.KPIEleHea.integrator3.y
generation.KPIHeaPum.integrator1.y
generation.KPIHeaPum.integrator3.y
generation.KPIPEleEleHea.integrator2.y
generation.KPIQEleHea_flow.integrator2.y
generation.KPIQHP.integrator2.y
generation.KPIQSol.integrator2.y
generation.KPIWel.integrator2.y
generation.senTGenOut.T
generation.solCol.vol[1].dynBal.U
generation.solCol.vol[2].dynBal.U
generation.solCol.vol[3].dynBal.U
generation.solCol.vol[4].dynBal.U
generation.solCol.vol[5].dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.DetailedSolarThermalWithHeatPump.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW");
Check of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW
The model has the same number of unknowns and equations: 4316
Check of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/TwoStoragesBoilerWithDHW.mos\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW\\\");\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/TwoStoragesBoilerWithDHW.mos");
simulateModel("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW");
Translation of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW
The DAE has 4316 scalar unknowns and 4316 scalar equations.
 
Statistics
 
Original Model
  Number of components: 967
  Variables: 12032
  Constants: 188 (188 scalars)
  Parameters: 6131 (6691 scalars)
  Unknowns: 5713 (4488 scalars)
  Differentiated variables: 130 scalars
  Equations: 4434
  Nontrivial: 3435
Translated Model
  Constants: 4475 scalars
  Free parameters: 509 scalars
  Parameter depending: 2487 scalars
  Outputs: 9 scalars
  Continuous time states: 92 scalars
  Time-varying variables: 1040 scalars
  Alias variables: 2856 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 4, 3, 3, 2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 2,   2, 4, 2, 2, 15, 4, 3, 2, 2, 2, 2, 2, 2, 4, 3, 4, 3, 3, 2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {20, 22, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1}
  Sizes after manipulation of the nonlinear systems: {2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {6, 1, 1, 20, 1, 22, 1, 1, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 0, 1, 3, 0, 3, 0, 0, 1, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {20, 1, 22, 1, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0, 3, 0, 0}
    Number of numerical Jacobians: 0
 
Sparse solvers enabled: false
Enabled for integrator Jacobian: false
Model sparse and large enough: true.
Sparse solvers are available for dassl, lsodar, cvode, ida, radau, esdirk*, sdirk*.
Enable sparse solvers by setting Advanced.Translation.SparseActivate.
Selected continuous time states
Statically selected continuous time states
distribution.boi.senTCold.T
distribution.boi.senTHot.T
distribution.boi.vol.dynBal.U
distribution.eneKPICalAftBufBoi.integrator2.y
distribution.eneKPICalBuf.integrator2.y
distribution.eneKPICalDHW.integrator2.y
distribution.hydSep.bottomCover.loadIns.T
distribution.hydSep.bottomCover.loadWall.T
distribution.hydSep.layer[1].dynBal.U
distribution.hydSep.layer[2].dynBal.U
distribution.hydSep.layer[3].dynBal.U
distribution.hydSep.layer[4].dynBal.U
distribution.hydSep.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.hydSep.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.hydSep.topCover.loadIns.T
distribution.hydSep.topCover.loadWall.T
distribution.KPIBoi1.integrator2.y
distribution.pumBoi.vol.dynBal.U
distribution.senTBuiSup.T
distribution.stoBuf.bottomCover.loadIns.T
distribution.stoBuf.bottomCover.loadWall.T
distribution.stoBuf.layer[1].dynBal.U
distribution.stoBuf.layer[2].dynBal.U
distribution.stoBuf.layer[3].dynBal.U
distribution.stoBuf.layer[4].dynBal.U
distribution.stoBuf.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.topCover.loadIns.T
distribution.stoBuf.topCover.loadWall.T
distribution.stoDHW.bottomCover.loadIns.T
distribution.stoDHW.bottomCover.loadWall.T
distribution.stoDHW.heatingCoil1.pipe[1].del.x
distribution.stoDHW.heatingCoil1.pipe[1].timDel.x
distribution.stoDHW.heatingCoil1.pipe[1].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[1].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[2].del.x
distribution.stoDHW.heatingCoil1.pipe[2].timDel.x
distribution.stoDHW.heatingCoil1.pipe[2].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[2].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[3].del.x
distribution.stoDHW.heatingCoil1.pipe[3].timDel.x
distribution.stoDHW.heatingCoil1.pipe[3].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[3].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[4].del.x
distribution.stoDHW.heatingCoil1.pipe[4].timDel.x
distribution.stoDHW.heatingCoil1.pipe[4].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[4].vol_b.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[1].del.x
distribution.stoDHW.heatingCoil2.pipe[1].timDel.x
distribution.stoDHW.heatingCoil2.pipe[1].vol_a.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[1].vol_b.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[2].del.x
distribution.stoDHW.heatingCoil2.pipe[2].timDel.x
distribution.stoDHW.heatingCoil2.pipe[2].vol_a.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[2].vol_b.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[3].del.x
distribution.stoDHW.heatingCoil2.pipe[3].timDel.x
distribution.stoDHW.heatingCoil2.pipe[3].vol_a.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[3].vol_b.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[4].del.x
distribution.stoDHW.heatingCoil2.pipe[4].timDel.x
distribution.stoDHW.heatingCoil2.pipe[4].vol_a.dynBal.U
distribution.stoDHW.heatingCoil2.pipe[4].vol_b.dynBal.U
distribution.stoDHW.layer[1].dynBal.U
distribution.stoDHW.layer[2].dynBal.U
distribution.stoDHW.layer[3].dynBal.U
distribution.stoDHW.layer[4].dynBal.U
distribution.stoDHW.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.topCover.loadIns.T
distribution.stoDHW.topCover.loadWall.T
distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.U
distribution.thrWayValBoiDHW.threWayValFlow.vol.dynBal.U
pumDHW.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoragesBoilerWithDHW.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater");
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater
The model has the same number of unknowns and equations: 1369
The model could not be deduced to be symbolically well-posed.
The model has
  1349+generation.heatPump.con.vol.dynBal.nPorts+2*generation.heatPump.eva.vol.dynBal.nPorts  +size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns, 1)+  generation.heatPump.safCtr.opeEnv.bouMapHea.nor.nu+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapCoo.nor.nu+generation.multiSum.nu+  generation.eleHea.vol.dynBal.nPorts+vol[1].dynBal.nPorts
scalar unknowns and
  1318+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if generation.bou_sinkAir.use_Xi_in   then 2 else (if generation.bou_sinkAir.use_X_in then 1 else 3))+(if  not   generation.bou_sinkAir.use_p_in then 1 else 0)+(if  not generation.bou_sinkAir.use_h_in   then 1 else 0)+(if generation.bouEva.use_Xi_in then 2 else (if   generation.bouEva.use_X_in then 1 else 3))+(if bouTra[1].use_Xi_in then 1   else (if bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1   else 0)+(if  not bouTra[1].use_T_in then 1 else 0)+(if  not generation.heatPump.con.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.heatPump.con.vol.dynBal.nPorts+(if  not   generation.heatPump.eva.vol.dynBal.use_mWat_flow then 1 else 0)+5*  generation.heatPump.eva.vol.dynBal.nPorts+size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns,   1)+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns, 1)+(if    not generation.eleHea.vol.dynBal.use_mWat_flow then 1 else 0)+3*  generation.eleHea.vol.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow then 1   else 0)+3*vol[1].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1369
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPumpAndElectricHeater.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPumpAndElectricHeater.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater
The DAE has 1369 scalar unknowns and 1369 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
  if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
      generation.heatPump.eva.vol.dynBal.medium.p = generation.heatPump.eva.vol.dynBal.p_start;
    end if;
  else
    if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
        der(generation.heatPump.eva.vol.dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    generation.bou_sinkAir.p(start = 101325)
 
The redundancies involve
initial equations: 
  generation.heatPump.eva.vol.dynBal.medium.p = 101325.0;
  320.15 = 320.15;
 
 
Statistics
 
Original Model
  Number of components: 350
  Variables: 2714
  Constants: 51 (51 scalars)
  Parameters: 1382 (1963 scalars)
  Unknowns: 1281 (1408 scalars)
  Differentiated variables: 18 scalars
  Equations: 1276
  Nontrivial: 1089
Translated Model
  Constants: 1180 scalars
  Free parameters: 330 scalars
  Parameter depending: 825 scalars
  Outputs: 7 scalars
  Continuous time states: 13 scalars
  Time-varying variables: 220 scalars
  Alias variables: 867 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {9, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.eleHea.vol.dynBal.U
generation.heatPump.con.vol.dynBal.U
generation.heatPump.eva.vol.dynBal.medium.Xi[1]
generation.heatPump.eva.vol.dynBal.U
generation.KPIEleHea.integrator1.y
generation.KPIEleHea.integrator3.y
generation.KPIHeaPum.integrator1.y
generation.KPIHeaPum.integrator3.y
generation.KPIPEleEleHea.integrator2.y
generation.KPIQEleHea_flow.integrator2.y
generation.KPIQHP.integrator2.y
generation.KPIWel.integrator2.y
generation.senTGenOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndElectricHeater.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler");
Check of BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler
The model has the same number of unknowns and equations: 593
The model could not be deduced to be symbolically well-posed.
The model has
  589+generation.boi.vol.dynBal.nPorts+vol[1].dynBal.nPorts
scalar unknowns and
  570+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if bouTra[1].use_Xi_in then 1 else (if   bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1 else 0)+  (if  not bouTra[1].use_T_in then 1 else 0)+(if  not generation.boi.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.boi.vol.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  593
Check of BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/GasBoiler.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler\",", "BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/GasBoiler.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler
The DAE has 593 scalar unknowns and 593 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
 
The redundancies involve
initial equations: 
  vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
 
 
Statistics
 
Original Model
  Number of components: 166
  Variables: 1470
  Constants: 36 (36 scalars)
  Parameters: 757 (950 scalars)
  Unknowns: 677 (614 scalars)
  Differentiated variables: 10 scalars
  Equations: 636
  Nontrivial: 540
Translated Model
  Constants: 663 scalars
  Free parameters: 106 scalars
  Parameter depending: 340 scalars
  Outputs: 3 scalars
  Continuous time states: 6 scalars
  Time-varying variables: 123 scalars
  Alias variables: 368 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5}
  Sizes after manipulation of the linear systems: {0}
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {8, 1, 1}
    Sizes after manipulation of the nonlinear systems: {2, 0, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.boi.senTCold.T
generation.boi.senTHot.T
generation.boi.vol.dynBal.U
generation.KPIBoi.integrator1.y
generation.KPIBoi.integrator3.y
generation.KPIQBoi.integrator2.y
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.GasBoiler.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading");
Check of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading
The model has the same number of unknowns and equations: 2589
Check of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/TwoStoDetailedDirectLoading.mos\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading\\\");\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/TwoStoDetailedDirectLoading.mos");
simulateModel("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading");
Translation of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading
The DAE has 2589 scalar unknowns and 2589 scalar equations.
 
Statistics
 
Original Model
  Number of components: 604
  Variables: 7267
  Constants: 112 (112 scalars)
  Parameters: 3758 (4212 scalars)
  Unknowns: 3397 (2698 scalars)
  Differentiated variables: 75 scalars
  Equations: 2659
  Nontrivial: 2068
Translated Model
  Constants: 2696 scalars
  Free parameters: 317 scalars
  Parameter depending: 1693 scalars
  Outputs: 7 scalars
  Continuous time states: 53 scalars
  Time-varying variables: 592 scalars
  Alias variables: 1724 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 2, 2, 4, 3, 3,   4, 3, 3, 2, 2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {20, 6, 6, 6, 6, 1, 1}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {6, 1, 1, 20, 1, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 0, 1, 3, 0, 1, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {20, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
distribution.eneKPICalBuf.integrator2.y
distribution.eneKPICalDHW.integrator2.y
distribution.senTBuiSup.T
distribution.stoBuf.bottomCover.loadIns.T
distribution.stoBuf.bottomCover.loadWall.T
distribution.stoBuf.layer[1].dynBal.U
distribution.stoBuf.layer[2].dynBal.U
distribution.stoBuf.layer[3].dynBal.U
distribution.stoBuf.layer[4].dynBal.U
distribution.stoBuf.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.topCover.loadIns.T
distribution.stoBuf.topCover.loadWall.T
distribution.stoDHW.bottomCover.loadIns.T
distribution.stoDHW.bottomCover.loadWall.T
distribution.stoDHW.heatingCoil1.pipe[1].del.x
distribution.stoDHW.heatingCoil1.pipe[1].timDel.x
distribution.stoDHW.heatingCoil1.pipe[1].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[1].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[2].del.x
distribution.stoDHW.heatingCoil1.pipe[2].timDel.x
distribution.stoDHW.heatingCoil1.pipe[2].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[2].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[3].del.x
distribution.stoDHW.heatingCoil1.pipe[3].timDel.x
distribution.stoDHW.heatingCoil1.pipe[3].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[3].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[4].del.x
distribution.stoDHW.heatingCoil1.pipe[4].timDel.x
distribution.stoDHW.heatingCoil1.pipe[4].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[4].vol_b.dynBal.U
distribution.stoDHW.layer[1].dynBal.U
distribution.stoDHW.layer[2].dynBal.U
distribution.stoDHW.layer[3].dynBal.U
distribution.stoDHW.layer[4].dynBal.U
distribution.stoDHW.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.topCover.loadIns.T
distribution.stoDHW.topCover.loadWall.T
distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.U
pumDHW.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedDirectLoading.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem");
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem
The model has the same number of unknowns and equations: 701
The model could not be deduced to be symbolically well-posed.
The model has
  667+2*transfer.parRad.nEle+transfer.rad[1].vol[1].dynBal.nPorts+transfer.rad[1].vol[2].dynBal.nPorts  +transfer.rad[1].vol[3].dynBal.nPorts+transfer.rad[1].vol[4].dynBal.nPorts+  transfer.rad[1].vol[5].dynBal.nPorts+transfer.rad[1].sumCon.nin+  transfer.rad[1].sumRad.nin+transfer.pumFixMFlo[1].vol.dynBal.nPorts+  vol[1].dynBal.nPorts
scalar unknowns and
  636+(if bou1[1].use_Xi_in then 1 else (if bou1[1].use_X_in then 0 else 1))+(if    not bou1[1].use_p_in then 1 else 0)+2*bou1[1].nPorts+(if  not   bou1[1].use_T_in then 1 else 0)+(if  not transfer.rad[1].vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*transfer.rad[1].vol[1].dynBal.nPorts+(if  not   transfer.rad[1].vol[2].dynBal.use_mWat_flow then 1 else 0)+3*transfer.rad[1].vol[2].dynBal.nPorts  +(if  not transfer.rad[1].vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  transfer.rad[1].vol[3].dynBal.nPorts+(if  not transfer.rad[1].vol[4].dynBal.use_mWat_flow   then 1 else 0)+3*transfer.rad[1].vol[4].dynBal.nPorts+(if  not   transfer.rad[1].vol[5].dynBal.use_mWat_flow then 1 else 0)+3*transfer.rad[1].vol[5].dynBal.nPorts  +(if  not transfer.pumFixMFlo[1].vol.dynBal.use_mWat_flow then 1 else 0)+3*  transfer.pumFixMFlo[1].vol.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)+2*transfer.parRad.nEle
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  701
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestIdealValveRadiatorSystem.mos\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem\\\");\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestIdealValveRadiatorSystem.mos");
simulateModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem", stopTime=12000, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem");
Translation of BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem
The DAE has 701 scalar unknowns and 701 scalar equations.
 
Statistics
 
Original Model
  Number of components: 203
  Variables: 2025
  Constants: 41 (41 scalars)
  Parameters: 1046 (1304 scalars)
  Unknowns: 938 (738 scalars)
  Differentiated variables: 15 scalars
  Equations: 765
  Nontrivial: 581
Translated Model
  Constants: 1001 scalars
  Free parameters: 95 scalars
  Parameter depending: 444 scalars
  Outputs: 1 scalars
  Continuous time states: 7 scalars
  Time-varying variables: 164 scalars
  Alias variables: 379 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {1, 1}
  Sizes after manipulation of the nonlinear systems: {1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {11, 1, 1}
    Sizes after manipulation of the nonlinear systems: {5, 1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
transfer.intKPICalHeaFlo.integrator2.y
transfer.pumFixMFlo[1].vol.dynBal.U
transfer.rad[1].vol[1].dynBal.U
transfer.rad[1].vol[2].dynBal.U
transfer.rad[1].vol[3].dynBal.U
transfer.rad[1].vol[4].dynBal.U
transfer.rad[1].vol[5].dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Transfer.Tests.TestIdealValveRadiatorSystem.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump");
Check of BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump
The model has the same number of unknowns and equations: 1694
The model could not be deduced to be symbolically well-posed.
The model has
  1670+generation.heatPump.con.vol.dynBal.nPorts+2*generation.heatPump.eva.vol.dynBal.nPorts  +size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns, 1)+  generation.heatPump.safCtr.opeEnv.bouMapHea.nor.nu+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapCoo.nor.nu+generation.multiSum.nu+  generation.eleHea.vol.dynBal.nPorts+generation.solThe.vol.dynBal.nPorts+  vol[1].dynBal.nPorts+vol[2].dynBal.nPorts
scalar unknowns and
  1625+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if generation.bou_sinkAir.use_Xi_in   then 2 else (if generation.bou_sinkAir.use_X_in then 1 else 3))+(if  not   generation.bou_sinkAir.use_p_in then 1 else 0)+(if  not generation.bou_sinkAir.use_h_in   then 1 else 0)+(if generation.bouEva.use_Xi_in then 2 else (if   generation.bouEva.use_X_in then 1 else 3))+(if bouTra[1].use_Xi_in then 1   else (if bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1   else 0)+(if  not bouTra[1].use_T_in then 1 else 0)+(if bouTra[2].use_Xi_in   then 1 else (if bouTra[2].use_X_in then 0 else 1))+(if  not bouTra[2].use_p_in   then 1 else 0)+(if  not bouTra[2].use_T_in then 1 else 0)+(if  not   generation.heatPump.con.vol.dynBal.use_mWat_flow then 1 else 0)+3*  generation.heatPump.con.vol.dynBal.nPorts+(if  not generation.heatPump.eva.vol.dynBal.use_mWat_flow   then 1 else 0)+5*generation.heatPump.eva.vol.dynBal.nPorts+size(  generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns, 1)+size(  generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns, 1)+(if  not   generation.eleHea.vol.dynBal.use_mWat_flow then 1 else 0)+3*generation.eleHea.vol.dynBal.nPorts  +(if  not generation.solThe.vol.dynBal.use_mWat_flow then 1 else 0)+3*  generation.solThe.vol.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow then 1   else 0)+3*vol[1].dynBal.nPorts+(if  not vol[2].dynBal.use_mWat_flow then 1   else 0)+3*vol[2].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)+(if  not pumDis[2].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1694
Check of BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/SimpleSolarThermalWithHeatPump.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump\",", "BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/SimpleSolarThermalWithHeatPump.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump
The DAE has 1694 scalar unknowns and 1694 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
  if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
      generation.heatPump.eva.vol.dynBal.medium.p = generation.heatPump.eva.vol.dynBal.p_start;
    end if;
  else
    if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
        der(generation.heatPump.eva.vol.dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
  if (vol[2].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[2].dynBal.medium.T = vol[2].dynBal.T_start;
  else
    if (vol[2].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[2].dynBal.medium.T) = 0;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    generation.bou_sinkAir.p(start = 101325)
 
The redundancies involve
initial equations: 
  generation.heatPump.eva.vol.dynBal.medium.p = 101325.0;
  320.15 = 320.15;
  vol[2].dynBal.medium.T = vol[2].dynBal.T_start;
 
 
Statistics
 
Original Model
  Number of components: 443
  Variables: 3679
  Constants: 69 (69 scalars)
  Parameters: 1886 (2620 scalars)
  Unknowns: 1724 (1754 scalars)
  Differentiated variables: 25 scalars
  Equations: 1646
  Nontrivial: 1385
Translated Model
  Constants: 1623 scalars
  Free parameters: 378 scalars
  Parameter depending: 1101 scalars
  Outputs: 7 scalars
  Continuous time states: 17 scalars
  Time-varying variables: 256 scalars
  Alias variables: 1085 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {9, 8, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 2, 1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.eleHea.vol.dynBal.U
generation.heatPump.con.vol.dynBal.U
generation.heatPump.eva.vol.dynBal.medium.Xi[1]
generation.heatPump.eva.vol.dynBal.U
generation.KPIEleHea.integrator1.y
generation.KPIEleHea.integrator3.y
generation.KPIHeaPum.integrator1.y
generation.KPIHeaPum.integrator3.y
generation.KPIPEleEleHea.integrator2.y
generation.KPIQEleHea_flow.integrator2.y
generation.KPIQHP.integrator2.y
generation.KPIWel.integrator2.y
generation.KPIWel1.integrator2.y
generation.senTGenOut.T
generation.solThe.senTCold.T
generation.solThe.senTHot.T
generation.solThe.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.SimpleSolarThermalWithHeatPump.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve");
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve
The model has the same number of unknowns and equations: 726
The model could not be deduced to be symbolically well-posed.
The model has
  690+2*transfer.parRad.nEle+transfer.rad[1].vol[1].dynBal.nPorts+transfer.rad[1].vol[2].dynBal.nPorts  +transfer.rad[1].vol[3].dynBal.nPorts+transfer.rad[1].vol[4].dynBal.nPorts+  transfer.rad[1].vol[5].dynBal.nPorts+transfer.rad[1].sumCon.nin+  transfer.rad[1].sumRad.nin+transfer.volSup.dynBal.nPorts+transfer.volRet.dynBal.nPorts  +vol[1].dynBal.nPorts
scalar unknowns and
  654+(if bou1[1].use_Xi_in then 1 else (if bou1[1].use_X_in then 0 else 1))+(if    not bou1[1].use_p_in then 1 else 0)+2*bou1[1].nPorts+(if  not   bou1[1].use_T_in then 1 else 0)+(if  not transfer.rad[1].vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*transfer.rad[1].vol[1].dynBal.nPorts+(if  not   transfer.rad[1].vol[2].dynBal.use_mWat_flow then 1 else 0)+3*transfer.rad[1].vol[2].dynBal.nPorts  +(if  not transfer.rad[1].vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  transfer.rad[1].vol[3].dynBal.nPorts+(if  not transfer.rad[1].vol[4].dynBal.use_mWat_flow   then 1 else 0)+3*transfer.rad[1].vol[4].dynBal.nPorts+(if  not   transfer.rad[1].vol[5].dynBal.use_mWat_flow then 1 else 0)+3*transfer.rad[1].vol[5].dynBal.nPorts  +(if  not transfer.volSup.dynBal.use_mWat_flow then 1 else 0)+3*  transfer.volSup.dynBal.nPorts+(if  not transfer.volRet.dynBal.use_mWat_flow   then 1 else 0)+3*transfer.volRet.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)+2*transfer.parRad.nEle
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  726
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestPressureBasedSystemWithReliefValve.mos\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve\\\");\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestPressureBasedSystemWithReliefValve.mos");
simulateModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve", stopTime=12000, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve");
Translation of BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve
The DAE has 726 scalar unknowns and 726 scalar equations.
Warning: The initial conditions are not fully specified.
Dymola has selected default initial conditions.
Warning: Assuming fixed start value for the continuous states:
    transfer.pressureReliefValve.firstOrder.y(start = transfer.pressureReliefValve.firstOrder.y_start)
 
 
Statistics
 
Original Model
  Number of components: 189
  Variables: 2063
  Constants: 46 (46 scalars)
  Parameters: 1030 (1150 scalars)
  Unknowns: 987 (763 scalars)
  Differentiated variables: 18 scalars
  Equations: 781
  Nontrivial: 588
Translated Model
  Constants: 986 scalars
  Free parameters: 96 scalars
  Parameter depending: 316 scalars
  Outputs: 1 scalars
  Continuous time states: 9 scalars
  Time-varying variables: 179 scalars
  Alias variables: 382 scalars
  Assumed default initial conditions: 1
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {14, 1}
  Sizes after manipulation of the nonlinear systems: {2, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {11, 14, 1, 1}
    Sizes after manipulation of the nonlinear systems: {5, 2, 0, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {14, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {2, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
transfer.pressureReliefValve.firstOrder.y
transfer.pressureReliefValve.val.actPos.y
transfer.rad[1].vol[1].dynBal.U
transfer.rad[1].vol[2].dynBal.U
transfer.rad[1].vol[3].dynBal.U
transfer.rad[1].vol[4].dynBal.U
transfer.rad[1].vol[5].dynBal.U
transfer.volRet.dynBal.U
transfer.volSup.dynBal.U
Finished
Warning: WARNINGS have been issued.
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Transfer.Tests.TestPressureBasedSystemWithReliefValve.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater");
Check of BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater
The model has the same number of unknowns and equations: 549
The model could not be deduced to be symbolically well-posed.
The model has
  545+generation.hea.vol.dynBal.nPorts+vol[1].dynBal.nPorts
scalar unknowns and
  526+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if bouTra[1].use_Xi_in then 1 else (if   bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1 else 0)+  (if  not bouTra[1].use_T_in then 1 else 0)+(if  not generation.hea.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.hea.vol.dynBal.nPorts+(if  not vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  549
Check of BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/ElectricalHeater.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater\",", "BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/ElectricalHeater.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater
The DAE has 549 scalar unknowns and 549 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
 
The redundancies involve
initial equations: 
  vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
 
 
Statistics
 
Original Model
  Number of components: 161
  Variables: 1347
  Constants: 37 (37 scalars)
  Parameters: 688 (841 scalars)
  Unknowns: 622 (570 scalars)
  Differentiated variables: 7 scalars
  Equations: 587
  Nontrivial: 492
Translated Model
  Constants: 594 scalars
  Free parameters: 93 scalars
  Parameter depending: 305 scalars
  Outputs: 2 scalars
  Continuous time states: 4 scalars
  Time-varying variables: 110 scalars
  Alias variables: 346 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {8, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.hea.vol.dynBal.U
generation.KPIEleHea.integrator1.y
generation.KPIEleHea.integrator3.y
generation.KPIQEleHea.integrator2.y
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.ElectricalHeater.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel");
Check of BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel
The model has the same number of unknowns and equations: 1733
The model could not be deduced to be symbolically well-posed.
The model has
  1674+distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.nPorts+  distribution.stoDHW.layer[1].dynBal.nPorts+distribution.stoDHW.layer[2].dynBal.nPorts  +distribution.stoDHW.layer[3].dynBal.nPorts+distribution.stoDHW.layer[4].dynBal.nPorts  +distribution.stoDHW.layer_HE[1].dynBal.nPorts+distribution.stoDHW.layer_HE[2].dynBal.nPorts  +distribution.stoDHW.layer_HE[3].dynBal.nPorts+distribution.stoDHW.layer_HE[4].dynBal.nPorts  +2*distribution.parStoDHW.nLayer+distribution.stoBuf.layer[1].dynBal.nPorts+  distribution.stoBuf.layer[2].dynBal.nPorts+distribution.stoBuf.layer[3].dynBal.nPorts  +distribution.stoBuf.layer[4].dynBal.nPorts+distribution.stoBuf.layer_HE[1].dynBal.nPorts  +distribution.stoBuf.layer_HE[2].dynBal.nPorts+distribution.stoBuf.layer_HE[3].dynBal.nPorts  +distribution.stoBuf.layer_HE[4].dynBal.nPorts+2*distribution.parStoBuf.nLayer  +distribution.multiSum.nu+pumDHW.vol.dynBal.nPorts+volSup[1].dynBal.nPorts+  volDem[1].dynBal.nPorts
scalar unknowns and
  1559+(if distribution.bouPum.use_Xi_in then 1 else (if distribution.bouPum.use_X_in   then 0 else 1))+(if  not distribution.bouPum.use_p_in then 1 else 0)+2*  distribution.bouPum.nPorts+(if  not distribution.bouPum.use_T_in then 1 else 0)  +(if distribution.stoDHW.use_TOut then 2*distribution.parStoDHW.nLayer else 0)  +(if distribution.stoBuf.use_TOut then 2*distribution.parStoBuf.nLayer else 0)  +(if distribution.bouPumTra.use_Xi_in then 1 else (if distribution.bouPumTra.use_X_in   then 0 else 1))+(if  not distribution.bouPumTra.use_p_in then 1 else 0)+2*  distribution.bouPumTra.nPorts+(if  not distribution.bouPumTra.use_T_in then 1   else 0)+(if bouDHW.use_Xi_in then 1 else (if bouDHW.use_X_in then 0 else 1))+  (if  not bouDHW.use_p_in then 1 else 0)+(if  not bouDHW.use_T_in then 1 else 0)  +(if  not distribution.stoDHW.layer[1].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoDHW.layer[1].dynBal.nPorts+(if  not distribution.stoDHW.layer[2].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoDHW.layer[2].dynBal.nPorts+(if  not   distribution.stoDHW.layer[3].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoDHW.layer[3].dynBal.nPorts+(if  not distribution.stoDHW.layer[4].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoDHW.layer[4].dynBal.nPorts+(if  not   distribution.stoDHW.layer_HE[1].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoDHW.layer_HE[1].dynBal.nPorts+(if  not distribution.stoDHW.layer_HE[2].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoDHW.layer_HE[2].dynBal.nPorts+(if  not   distribution.stoDHW.layer_HE[3].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoDHW.layer_HE[3].dynBal.nPorts+(if  not distribution.stoDHW.layer_HE[4].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoDHW.layer_HE[4].dynBal.nPorts+(if  not   distribution.stoBuf.layer[1].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoBuf.layer[1].dynBal.nPorts+(if  not distribution.stoBuf.layer[2].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoBuf.layer[2].dynBal.nPorts+(if  not   distribution.stoBuf.layer[3].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoBuf.layer[3].dynBal.nPorts+(if  not distribution.stoBuf.layer[4].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoBuf.layer[4].dynBal.nPorts+(if  not   distribution.stoBuf.layer_HE[1].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoBuf.layer_HE[1].dynBal.nPorts+(if  not distribution.stoBuf.layer_HE[2].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoBuf.layer_HE[2].dynBal.nPorts+(if  not   distribution.stoBuf.layer_HE[3].dynBal.use_mWat_flow then 1 else 0)+3*  distribution.stoBuf.layer_HE[3].dynBal.nPorts+(if  not distribution.stoBuf.layer_HE[4].dynBal.use_mWat_flow   then 1 else 0)+3*distribution.stoBuf.layer_HE[4].dynBal.nPorts+(if  not   pumDHW.vol.dynBal.use_mWat_flow then 1 else 0)+3*pumDHW.vol.dynBal.nPorts+(if    not volSup[1].dynBal.use_mWat_flow then 1 else 0)+3*volSup[1].dynBal.nPorts+(  if  not volDem[1].dynBal.use_mWat_flow then 1 else 0)+3*volDem[1].dynBal.nPorts  +(if  not distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.use_mWat_flow   then 1 else 0)+3*distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.nPorts  +(if  not distribution.pumGen.dpControlled_dp.vol.steBal.use_mWat_flow then 1   else 0)+(if  not distribution.pumTra.dpControlled_dp.vol.steBal.use_mWat_flow   then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1733
Check of BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/SimpleTwoStorageParallel.mos\",", "BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel\",", "BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel\\\");\",", "BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/SimpleTwoStorageParallel.mos");
simulateModel("BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel");
Translation of BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel
The DAE has 1733 scalar unknowns and 1733 scalar equations.
 
Statistics
 
Original Model
  Number of components: 406
  Variables: 4838
  Constants: 106 (106 scalars)
  Parameters: 2327 (2767 scalars)
  Unknowns: 2405 (1827 scalars)
  Differentiated variables: 42 scalars
  Equations: 1885
  Nontrivial: 1403
Translated Model
  Constants: 1924 scalars
  Free parameters: 210 scalars
  Parameter depending: 1068 scalars
  Outputs: 6 scalars
  Continuous time states: 20 scalars
  Time-varying variables: 347 scalars
  Alias variables: 1151 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {13, 1, 1}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {4, 1, 13, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1, 3, 1, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {13}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
distribution.eneKPICalBuf.integrator2.y
distribution.eneKPICalDHW.integrator2.y
distribution.stoBuf.layer[1].dynBal.U
distribution.stoBuf.layer[2].dynBal.U
distribution.stoBuf.layer[3].dynBal.U
distribution.stoBuf.layer[4].dynBal.U
distribution.stoBuf.layer_HE[1].dynBal.U
distribution.stoBuf.layer_HE[2].dynBal.U
distribution.stoBuf.layer_HE[3].dynBal.U
distribution.stoBuf.layer_HE[4].dynBal.U
distribution.stoDHW.layer[1].dynBal.U
distribution.stoDHW.layer[2].dynBal.U
distribution.stoDHW.layer[3].dynBal.U
distribution.stoDHW.layer[4].dynBal.U
distribution.stoDHW.layer_HE[1].dynBal.U
distribution.stoDHW.layer_HE[2].dynBal.U
distribution.stoDHW.layer_HE[3].dynBal.U
distribution.stoDHW.layer_HE[4].dynBal.U
distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.U
pumDHW.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Distribution.Tests.SimpleTwoStorageParallel.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions");
Check of BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions
The model has the same number of unknowns and equations: 813
The model could not be deduced to be symbolically well-posed.
The model has
  813
scalar unknowns and
  758+(if sou.use_Xi_in then 1 else (if sou.use_X_in then 0 else 1))+(if  not   sou.use_p_in then 1 else 0)+2*sou.nPorts+(if  not sou.use_T_in then 1 else 0)+  (if sou1.use_Xi_in then 1 else (if sou1.use_X_in then 0 else 1))+(if  not   sou1.use_p_in then 1 else 0)+2*sou1.nPorts+(if  not sou1.use_T_in then 1 else 0)  +(if sou2.use_Xi_in then 1 else (if sou2.use_X_in then 0 else 1))+(if  not   sou2.use_p_in then 1 else 0)+2*sou2.nPorts+(if  not sou2.use_T_in then 1 else 0)  +(if sou3.use_Xi_in then 1 else (if sou3.use_X_in then 0 else 1))+(if  not   sou3.use_p_in then 1 else 0)+2*sou3.nPorts+(if  not sou3.use_T_in then 1 else 0)  +(if sou4.use_Xi_in then 1 else (if sou4.use_X_in then 0 else 1))+(if  not   sou4.use_p_in then 1 else 0)+2*sou4.nPorts+(if  not sou4.use_T_in then 1 else 0)  +(if sin.use_Xi_in then 1 else (if sin.use_X_in then 0 else 1))+(if  not   sin.use_p_in then 1 else 0)+2*sin.nPorts+(if  not sin.use_T_in then 1 else 0)+  (if sin1.use_Xi_in then 1 else (if sin1.use_X_in then 0 else 1))+(if  not   sin1.use_p_in then 1 else 0)+2*sin1.nPorts+(if  not sin1.use_T_in then 1 else 0)  +(if sin2.use_Xi_in then 1 else (if sin2.use_X_in then 0 else 1))+(if  not   sin2.use_p_in then 1 else 0)+2*sin2.nPorts+(if  not sin2.use_T_in then 1 else 0)  +(if sin3.use_Xi_in then 1 else (if sin3.use_X_in then 0 else 1))+(if  not   sin3.use_p_in then 1 else 0)+2*sin3.nPorts+(if  not sin3.use_T_in then 1 else 0)  +(if sin4.use_Xi_in then 1 else (if sin4.use_X_in then 0 else 1))+(if  not   sin4.use_p_in then 1 else 0)+2*sin4.nPorts+(if  not sin4.use_T_in then 1 else 0)  +(if  not pumDPConst.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(  if  not pumDPVar.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(if    not pumDPTotal.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(if    not pumDPVarOnOff.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(  if  not pumSpeed.speedControlled_y.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  813
Check of BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Components/PreconfiguredControlledMovers/PreconfiguredOptions.mos\",", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions\",", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions\\\");\",", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Components/PreconfiguredControlledMovers/PreconfiguredOptions.mos");
simulateModel("BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions", stopTime=3600, tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions");
Translation of BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions
The DAE has 813 scalar unknowns and 813 scalar equations.
 
Statistics
 
Original Model
  Number of components: 281
  Variables: 2805
  Constants: 70 (70 scalars)
  Parameters: 1662 (2357 scalars)
  Unknowns: 1073 (863 scalars)
  Differentiated variables: 10 scalars
  Equations: 1066
  Nontrivial: 934
Translated Model
  Constants: 1341 scalars
  Free parameters: 227 scalars
  Parameter depending: 1022 scalars
  Continuous time states: 10 scalars
  Time-varying variables: 166 scalars
  Alias variables: 534 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {6, 6, 6, 6, 5, 1, 1, 1, 1}
  Sizes after manipulation of the nonlinear systems: {1, 1, 1, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {6, 6, 1, 6, 1, 6, 1, 5, 1, 1, 1, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {6, 6, 1, 6, 1, 6, 1, 5, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {1, 1, 0, 1, 0, 1, 0, 1, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
val.filter.s[1]
val.filter.s[2]
val1.filter.s[1]
val1.filter.s[2]
val2.filter.s[1]
val2.filter.s[2]
val3.filter.s[1]
val3.filter.s[2]
val4.filter.s[1]
val4.filter.s[2]
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel");
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel
The model has the same number of unknowns and equations: 1560
The model could not be deduced to be symbolically well-posed.
The model has
  1538+generation.heatPump.con.vol.dynBal.nPorts+2*generation.heatPump.eva.vol.dynBal.nPorts  +size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns, 1)+  generation.heatPump.safCtr.opeEnv.bouMapHea.nor.nu+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapCoo.nor.nu+generation.multiSum.nu+  generation.boi.vol.dynBal.nPorts+generation.thrWayVal.threWayValFlow.vol.dynBal.nPorts  +vol[1].dynBal.nPorts
scalar unknowns and
  1499+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if generation.bou_sinkAir.use_Xi_in   then 2 else (if generation.bou_sinkAir.use_X_in then 1 else 3))+(if  not   generation.bou_sinkAir.use_p_in then 1 else 0)+(if  not generation.bou_sinkAir.use_h_in   then 1 else 0)+(if generation.bouEva.use_Xi_in then 2 else (if   generation.bouEva.use_X_in then 1 else 3))+(if bouTra[1].use_Xi_in then 1   else (if bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1   else 0)+(if  not bouTra[1].use_T_in then 1 else 0)+(if  not generation.heatPump.con.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.heatPump.con.vol.dynBal.nPorts+(if  not   generation.heatPump.eva.vol.dynBal.use_mWat_flow then 1 else 0)+5*  generation.heatPump.eva.vol.dynBal.nPorts+size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns,   1)+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns, 1)+(if    not generation.boi.vol.dynBal.use_mWat_flow then 1 else 0)+3*generation.boi.vol.dynBal.nPorts  +(if  not vol[1].dynBal.use_mWat_flow then 1 else 0)+3*vol[1].dynBal.nPorts+(  if  not generation.thrWayVal.threWayValFlow.vol.dynBal.use_mWat_flow then 1   else 0)+3*generation.thrWayVal.threWayValFlow.vol.dynBal.nPorts+(if  not   pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1560
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPumpAndGasBoilerParallel.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPumpAndGasBoilerParallel.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel
The DAE has 1560 scalar unknowns and 1560 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
  if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
      generation.heatPump.eva.vol.dynBal.medium.p = generation.heatPump.eva.vol.dynBal.p_start;
    end if;
  else
    if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
        der(generation.heatPump.eva.vol.dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    generation.bou_sinkAir.p(start = 101325)
 
The redundancies involve
initial equations: 
  generation.heatPump.eva.vol.dynBal.medium.p = 101325.0;
  320.15 = 320.15;
 
 
Statistics
 
Original Model
  Number of components: 381
  Variables: 3365
  Constants: 60 (60 scalars)
  Parameters: 1752 (2372 scalars)
  Unknowns: 1553 (1608 scalars)
  Differentiated variables: 21 scalars
  Equations: 1466
  Nontrivial: 1250
Translated Model
  Constants: 1471 scalars
  Free parameters: 376 scalars
  Parameter depending: 875 scalars
  Outputs: 9 scalars
  Continuous time states: 14 scalars
  Time-varying variables: 330 scalars
  Alias variables: 988 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {4}
  Sizes after manipulation of the linear systems: {0}
  Sizes of nonlinear systems of equations: {18, 3, 1}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {18, 1, 1}
    Sizes after manipulation of the nonlinear systems: {2, 0, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {2, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.boi.senTCold.T
generation.boi.senTHot.T
generation.boi.vol.dynBal.U
generation.heatPump.con.vol.dynBal.U
generation.heatPump.eva.vol.dynBal.medium.Xi[1]
generation.heatPump.eva.vol.dynBal.U
generation.KPIBoi.integrator2.y
generation.KPIBoiFue.integrator2.y
generation.KPIHeaPum.integrator1.y
generation.KPIHeaPum.integrator3.y
generation.KPIQHP.integrator2.y
generation.KPIWel.integrator2.y
generation.senTGenOut.T
generation.thrWayVal.threWayValFlow.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.HeatPumpAndGasBoilerParallel.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating");
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating
Note: 
Your model is using an outer "system" component but
an inner "system" component is not defined.
For simulation drag Modelica.Fluid.System into your model
to specify system properties.
 
The model has the same number of unknowns and equations: 1153
The model could not be deduced to be symbolically well-posed.
The model has
  999+15*(transfer.ufh[1].panelHeatingSegment[1].vol.nPorts+transfer.ufh[1].panelHeatingSegment[2].vol.nPorts  +transfer.ufh[1].panelHeatingSegment[3].vol.nPorts+transfer.ufh[1].panelHeatingSegment[4].vol.nPorts  +transfer.ufh[1].panelHeatingSegment[5].vol.nPorts)+transfer.pumpFix_m_flow[1].vol.dynBal.nPorts  +vol[1].dynBal.nPorts
scalar unknowns and
  958+(if  not transfer.ufh[1].panelHeatingSegment[1].vol.use_portsData then 4*  transfer.ufh[1].panelHeatingSegment[1].vol.nPorts else 0)+13*transfer.ufh[1].panelHeatingSegment[1].vol.nPorts  +(if  not transfer.ufh[1].panelHeatingSegment[1].twoStar_RadEx.use_A_in then 1   else 0)+(if  not transfer.ufh[1].panelHeatingSegment[2].vol.use_portsData   then 4*transfer.ufh[1].panelHeatingSegment[2].vol.nPorts else 0)+13*  transfer.ufh[1].panelHeatingSegment[2].vol.nPorts+(if  not transfer.ufh[1].panelHeatingSegment[2].twoStar_RadEx.use_A_in   then 1 else 0)+(if  not transfer.ufh[1].panelHeatingSegment[3].vol.use_portsData   then 4*transfer.ufh[1].panelHeatingSegment[3].vol.nPorts else 0)+13*  transfer.ufh[1].panelHeatingSegment[3].vol.nPorts+(if  not transfer.ufh[1].panelHeatingSegment[3].twoStar_RadEx.use_A_in   then 1 else 0)+(if  not transfer.ufh[1].panelHeatingSegment[4].vol.use_portsData   then 4*transfer.ufh[1].panelHeatingSegment[4].vol.nPorts else 0)+13*  transfer.ufh[1].panelHeatingSegment[4].vol.nPorts+(if  not transfer.ufh[1].panelHeatingSegment[4].twoStar_RadEx.use_A_in   then 1 else 0)+(if  not transfer.ufh[1].panelHeatingSegment[5].vol.use_portsData   then 4*transfer.ufh[1].panelHeatingSegment[5].vol.nPorts else 0)+13*  transfer.ufh[1].panelHeatingSegment[5].vol.nPorts+(if  not transfer.ufh[1].panelHeatingSegment[5].twoStar_RadEx.use_A_in   then 1 else 0)+(if bou1[1].use_Xi_in then 1 else (if bou1[1].use_X_in then 0   else 1))+(if  not bou1[1].use_p_in then 1 else 0)+2*bou1[1].nPorts+(if  not   bou1[1].use_T_in then 1 else 0)+(if  not transfer.pumpFix_m_flow[1].vol.dynBal.use_mWat_flow   then 1 else 0)+3*transfer.pumpFix_m_flow[1].vol.dynBal.nPorts+(if  not   vol[1].dynBal.use_mWat_flow then 1 else 0)+3*vol[1].dynBal.nPorts+(if  not   pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1153
Check of BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestUnderfloorHeating.mos\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating\\\");\",", "BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Transfer/Tests/TestUnderfloorHeating.mos");
simulateModel("BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating", stopTime=36000, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating");
Translation of BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating
Note: 
Your model is using an outer "system" component but
an inner "system" component is not defined.
For simulation drag Modelica.Fluid.System into your model
to specify system properties.
 
The DAE has 1153 scalar unknowns and 1153 scalar equations.
Warning: The initial conditions are not fully specified.
Dymola has selected default initial conditions.
Warning: Assuming fixed start value for the continuous states:
    transfer.heaCap[1].T(start = 293.15)
    transfer.ufh[1].panelHeatingSegment[1].panel_Segment1.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[1].panel_Segment1.T0)
    transfer.ufh[1].panelHeatingSegment[1].panel_Segment2.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[1].panel_Segment2.T0)
    transfer.ufh[1].panelHeatingSegment[1].vol.medium.T(start = transfer.ufh[1].panelHeatingSegment[1].vol.T_start)
    transfer.ufh[1].panelHeatingSegment[2].panel_Segment1.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[2].panel_Segment1.T0)
    transfer.ufh[1].panelHeatingSegment[2].panel_Segment2.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[2].panel_Segment2.T0)
    transfer.ufh[1].panelHeatingSegment[2].vol.medium.T(start = transfer.ufh[1].panelHeatingSegment[2].vol.T_start)
    transfer.ufh[1].panelHeatingSegment[3].panel_Segment1.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[3].panel_Segment1.T0)
    transfer.ufh[1].panelHeatingSegment[3].panel_Segment2.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[3].panel_Segment2.T0)
    transfer.ufh[1].panelHeatingSegment[3].vol.medium.T(start = transfer.ufh[1].panelHeatingSegment[3].vol.T_start)
    transfer.ufh[1].panelHeatingSegment[4].panel_Segment1.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[4].panel_Segment1.T0)
    transfer.ufh[1].panelHeatingSegment[4].panel_Segment2.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[4].panel_Segment2.T0)
    transfer.ufh[1].panelHeatingSegment[4].vol.medium.T(start = transfer.ufh[1].panelHeatingSegment[4].vol.T_start)
    transfer.ufh[1].panelHeatingSegment[5].panel_Segment1.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[5].panel_Segment1.T0)
    transfer.ufh[1].panelHeatingSegment[5].panel_Segment2.heatCapacitor.T(start       = transfer.ufh[1].panelHeatingSegment[5].panel_Segment2.T0)
    transfer.ufh[1].panelHeatingSegment[5].vol.medium.T(start = transfer.ufh[1].panelHeatingSegment[5].vol.T_start)
 
 
Statistics
 
Original Model
  Number of components: 234
  Variables: 2546
  Constants: 24 (24 scalars)
  Parameters: 1178 (1438 scalars)
  Unknowns: 1344 (1190 scalars)
  Differentiated variables: 31 scalars
  Equations: 1080
  Nontrivial: 883
Translated Model
  Constants: 1085 scalars
  Free parameters: 175 scalars
  Parameter depending: 596 scalars
  Outputs: 1 scalars
  Continuous time states: 18 scalars
  Time-varying variables: 268 scalars
  Alias variables: 528 scalars
  Assumed default initial conditions: 16
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {6, 6, 6, 6, 6, 1, 1}
  Sizes after manipulation of the nonlinear systems: {1, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
transfer.heaCap[1].T
transfer.integralKPICalculator[1].integrator2.y
transfer.pumpFix_m_flow[1].vol.dynBal.U
transfer.ufh[1].panelHeatingSegment[1].panel_Segment1.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[1].panel_Segment2.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[1].vol.medium.T
transfer.ufh[1].panelHeatingSegment[2].panel_Segment1.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[2].panel_Segment2.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[2].vol.medium.T
transfer.ufh[1].panelHeatingSegment[3].panel_Segment1.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[3].panel_Segment2.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[3].vol.medium.T
transfer.ufh[1].panelHeatingSegment[4].panel_Segment1.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[4].panel_Segment2.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[4].vol.medium.T
transfer.ufh[1].panelHeatingSegment[5].panel_Segment1.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[5].panel_Segment2.heatCapacitor.T
transfer.ufh[1].panelHeatingSegment[5].vol.medium.T
Finished
Warning: WARNINGS have been issued.
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Transfer.Tests.TestUnderfloorHeating.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPump");
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPump
The model has the same number of unknowns and equations: 1234
The model could not be deduced to be symbolically well-posed.
The model has
  1217+generation.heatPump.con.vol.dynBal.nPorts+2*generation.heatPump.eva.vol.dynBal.nPorts  +size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns, 1)+  generation.heatPump.safCtr.opeEnv.bouMapHea.nor.nu+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns,   1)+generation.heatPump.safCtr.opeEnv.bouMapCoo.nor.nu+generation.multiSum.nu+  vol[1].dynBal.nPorts
scalar unknowns and
  1190+(if weaDat.pAtmSou == IBPSA.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == IBPSA.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == IBPSA.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+(if generation.bou_sinkAir.use_Xi_in   then 2 else (if generation.bou_sinkAir.use_X_in then 1 else 3))+(if  not   generation.bou_sinkAir.use_p_in then 1 else 0)+(if  not generation.bou_sinkAir.use_h_in   then 1 else 0)+(if generation.bouEva.use_Xi_in then 2 else (if   generation.bouEva.use_X_in then 1 else 3))+(if bouTra[1].use_Xi_in then 1   else (if bouTra[1].use_X_in then 0 else 1))+(if  not bouTra[1].use_p_in then 1   else 0)+(if  not bouTra[1].use_T_in then 1 else 0)+(if  not generation.heatPump.con.vol.dynBal.use_mWat_flow   then 1 else 0)+3*generation.heatPump.con.vol.dynBal.nPorts+(if  not   generation.heatPump.eva.vol.dynBal.use_mWat_flow then 1 else 0)+5*  generation.heatPump.eva.vol.dynBal.nPorts+size(generation.heatPump.safCtr.opeEnv.bouMapHea.tabBou.columns,   1)+size(generation.heatPump.safCtr.opeEnv.bouMapCoo.tabBou.columns, 1)+(if    not vol[1].dynBal.use_mWat_flow then 1 else 0)+3*vol[1].dynBal.nPorts+(if    not pumDis[1].dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1234
Check of BESMod.Systems.Hydraulical.Generation.Tests.HeatPump successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPump.mos\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Generation.Tests.HeatPump\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Generation.Tests.HeatPump\\\");\",", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Generation/Tests/HeatPump.mos");
simulateModel("BESMod.Systems.Hydraulical.Generation.Tests.HeatPump", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Generation.Tests.HeatPump");
Translation of BESMod.Systems.Hydraulical.Generation.Tests.HeatPump
The DAE has 1234 scalar unknowns and 1234 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.FixedInitial)     then 
    vol[1].dynBal.medium.T = vol[1].dynBal.T_start;
  else
    if (vol[1].dynBal.energyDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      der(vol[1].dynBal.medium.T) = 0;
    end if;
  end if;
  if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
      generation.heatPump.eva.vol.dynBal.medium.p = generation.heatPump.eva.vol.dynBal.p_start;
    end if;
  else
    if (generation.heatPump.eva.vol.dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (generation.heatPump.eva.vol.dynBal.initialize_p) then 
        der(generation.heatPump.eva.vol.dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    generation.bou_sinkAir.p(start = 101325)
 
The redundancies involve
initial equations: 
  generation.heatPump.eva.vol.dynBal.medium.p = 101325.0;
  320.15 = 320.15;
 
 
Statistics
 
Original Model
  Number of components: 314
  Variables: 2403
  Constants: 45 (45 scalars)
  Parameters: 1235 (1821 scalars)
  Unknowns: 1123 (1269 scalars)
  Differentiated variables: 12 scalars
  Equations: 1134
  Nontrivial: 976
Translated Model
  Constants: 1038 scalars
  Free parameters: 309 scalars
  Parameter depending: 807 scalars
  Outputs: 6 scalars
  Continuous time states: 8 scalars
  Time-varying variables: 198 scalars
  Alias variables: 783 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {3}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {7, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
generation.heatPump.con.vol.dynBal.U
generation.heatPump.eva.vol.dynBal.medium.Xi[1]
generation.heatPump.eva.vol.dynBal.U
generation.KPIHeaPum.integrator1.y
generation.KPIHeaPum.integrator3.y
generation.KPIQHP.integrator2.y
generation.KPIWel.integrator2.y
generation.senTGenOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Generation.Tests.HeatPump.translation.log"); = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading");
Check of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading
The model has the same number of unknowns and equations: 3338
Check of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/TwoStoDetailedIndirectLoading.mos\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading\\\");\",", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Distribution/Tests/TwoStoDetailedIndirectLoading.mos");
simulateModel("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading", stopTime=3600, method="CVode", tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading");
Translation of BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading
The DAE has 3338 scalar unknowns and 3338 scalar equations.
 
Statistics
 
Original Model
  Number of components: 740
  Variables: 9307
  Constants: 154 (154 scalars)
  Parameters: 4675 (5088 scalars)
  Unknowns: 4478 (3476 scalars)
  Differentiated variables: 99 scalars
  Equations: 3508
  Nontrivial: 2708
Translated Model
  Constants: 3612 scalars
  Free parameters: 377 scalars
  Parameter depending: 1768 scalars
  Outputs: 7 scalars
  Continuous time states: 69 scalars
  Time-varying variables: 778 scalars
  Alias variables: 2183 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 2, 2, 4, 3, 3,   4, 3, 3, 2, 2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {27, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {4, 1, 27, 1, 1, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1, 3, 0, 0, 1, 1}
    Sizes of simplified homotopy nonlinear systems of equations: {27, 1, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
distribution.eneKPICalBuf.integrator2.y
distribution.eneKPICalDHW.integrator2.y
distribution.senTBuiSup.T
distribution.stoBuf.bottomCover.loadIns.T
distribution.stoBuf.bottomCover.loadWall.T
distribution.stoBuf.heatingCoil1.pipe[1].del.x
distribution.stoBuf.heatingCoil1.pipe[1].timDel.x
distribution.stoBuf.heatingCoil1.pipe[1].vol_a.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[1].vol_b.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[2].del.x
distribution.stoBuf.heatingCoil1.pipe[2].timDel.x
distribution.stoBuf.heatingCoil1.pipe[2].vol_a.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[2].vol_b.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[3].del.x
distribution.stoBuf.heatingCoil1.pipe[3].timDel.x
distribution.stoBuf.heatingCoil1.pipe[3].vol_a.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[3].vol_b.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[4].del.x
distribution.stoBuf.heatingCoil1.pipe[4].timDel.x
distribution.stoBuf.heatingCoil1.pipe[4].vol_a.dynBal.U
distribution.stoBuf.heatingCoil1.pipe[4].vol_b.dynBal.U
distribution.stoBuf.layer[1].dynBal.U
distribution.stoBuf.layer[2].dynBal.U
distribution.stoBuf.layer[3].dynBal.U
distribution.stoBuf.layer[4].dynBal.U
distribution.stoBuf.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoBuf.topCover.loadIns.T
distribution.stoBuf.topCover.loadWall.T
distribution.stoDHW.bottomCover.loadIns.T
distribution.stoDHW.bottomCover.loadWall.T
distribution.stoDHW.heatingCoil1.pipe[1].del.x
distribution.stoDHW.heatingCoil1.pipe[1].timDel.x
distribution.stoDHW.heatingCoil1.pipe[1].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[1].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[2].del.x
distribution.stoDHW.heatingCoil1.pipe[2].timDel.x
distribution.stoDHW.heatingCoil1.pipe[2].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[2].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[3].del.x
distribution.stoDHW.heatingCoil1.pipe[3].timDel.x
distribution.stoDHW.heatingCoil1.pipe[3].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[3].vol_b.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[4].del.x
distribution.stoDHW.heatingCoil1.pipe[4].timDel.x
distribution.stoDHW.heatingCoil1.pipe[4].vol_a.dynBal.U
distribution.stoDHW.heatingCoil1.pipe[4].vol_b.dynBal.U
distribution.stoDHW.layer[1].dynBal.U
distribution.stoDHW.layer[2].dynBal.U
distribution.stoDHW.layer[3].dynBal.U
distribution.stoDHW.layer[4].dynBal.U
distribution.stoDHW.storageMantle[1].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[1].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[2].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[2].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[3].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[3].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[4].Insulation.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.storageMantle[4].Wall.CylindricLoad1.heatCapacitor.T
distribution.stoDHW.topCover.loadIns.T
distribution.stoDHW.topCover.loadWall.T
distribution.threeWayValveWithFlowReturn.threWayValFlow.vol.dynBal.U
pumDHW.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Distribution.Tests.TwoStoDetailedIndirectLoading.translation.log");