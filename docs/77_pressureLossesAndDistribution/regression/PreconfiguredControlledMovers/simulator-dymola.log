 = true


rCheck = checkModel("BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions");
Check of BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions:
The model has the same number of unknowns and equations: 843
The model could not be deduced to be symbolically well-posed.
The model has
  843
scalar unknowns and
  788+(if sou.use_Xi_in then 1 else (if sou.use_X_in then 0 else 1))+(if  not   sou.use_p_in then 1 else 0)+2*sou.nPorts+(if  not sou.use_T_in then 1 else 0)+  (if sou1.use_Xi_in then 1 else (if sou1.use_X_in then 0 else 1))+(if  not   sou1.use_p_in then 1 else 0)+2*sou1.nPorts+(if  not sou1.use_T_in then 1 else 0)  +(if sou2.use_Xi_in then 1 else (if sou2.use_X_in then 0 else 1))+(if  not   sou2.use_p_in then 1 else 0)+2*sou2.nPorts+(if  not sou2.use_T_in then 1 else 0)  +(if sou3.use_Xi_in then 1 else (if sou3.use_X_in then 0 else 1))+(if  not   sou3.use_p_in then 1 else 0)+2*sou3.nPorts+(if  not sou3.use_T_in then 1 else 0)  +(if sou4.use_Xi_in then 1 else (if sou4.use_X_in then 0 else 1))+(if  not   sou4.use_p_in then 1 else 0)+2*sou4.nPorts+(if  not sou4.use_T_in then 1 else 0)  +(if sin.use_Xi_in then 1 else (if sin.use_X_in then 0 else 1))+(if  not   sin.use_p_in then 1 else 0)+2*sin.nPorts+(if  not sin.use_T_in then 1 else 0)+  (if sin1.use_Xi_in then 1 else (if sin1.use_X_in then 0 else 1))+(if  not   sin1.use_p_in then 1 else 0)+2*sin1.nPorts+(if  not sin1.use_T_in then 1 else 0)  +(if sin2.use_Xi_in then 1 else (if sin2.use_X_in then 0 else 1))+(if  not   sin2.use_p_in then 1 else 0)+2*sin2.nPorts+(if  not sin2.use_T_in then 1 else 0)  +(if sin3.use_Xi_in then 1 else (if sin3.use_X_in then 0 else 1))+(if  not   sin3.use_p_in then 1 else 0)+2*sin3.nPorts+(if  not sin3.use_T_in then 1 else 0)  +(if sin4.use_Xi_in then 1 else (if sin4.use_X_in then 0 else 1))+(if  not   sin4.use_p_in then 1 else 0)+2*sin4.nPorts+(if  not sin4.use_T_in then 1 else 0)  +(if  not pumDPConst.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(  if  not pumDPVar.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(if    not pumDPTotal.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(if    not pumDPVarOnOff.dpControlled_dp.vol.steBal.use_mWat_flow then 1 else 0)+(  if  not pumSpeed.dpControlled_dp1.vol.steBal.use_mWat_flow then 1 else 0)
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  843
Check of BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Components/PreconfiguredControlledMovers/PreconfiguredOptions.mos\",", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions\",", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions\\\");\",", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");
Modelica.Utilities.Streams.print("      },", "BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.statistics.log");


rScript=RunScript("modelica://BESMod/Resources/Scripts/Dymola/Systems/Hydraulical/Components/PreconfiguredControlledMovers/PreconfiguredOptions.mos");
simulateModel("BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions", stopTime=3600, tolerance=1e-06, resultFile="BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions");
Translation of BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions:
The DAE has 843 scalar unknowns and 843 scalar equations.
 
Statistics
 
Original Model
  Number of components: 286
  Variables: 2885
  Constants: 75 (75 scalars)
  Parameters: 1717 (2417 scalars)
  Unknowns: 1093 (893 scalars)
  Differentiated variables: 20 scalars
  Equations: 1086
  Nontrivial: 954
Translated Model
  Constants: 1369 scalars
  Free parameters: 243 scalars
  Parameter depending: 1043 scalars
  Continuous time states: 20 scalars
  Time-varying variables: 191 scalars
  Alias variables: 539 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: { }
  Sizes after manipulation of the linear systems: { }
  Sizes of nonlinear systems of equations: {3, 3, 3, 3, 5, 1, 1, 1, 1}
  Sizes after manipulation of the nonlinear systems: {1, 1, 1, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {3, 3, 1, 3, 1, 3, 1, 5, 1, 1, 1, 1, 1}
    Sizes after manipulation of the nonlinear systems: {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
  pumDPConst.dpControlled_dp.filter.s[1]
  pumDPConst.dpControlled_dp.filter.s[2]
  pumDPTotal.dpControlled_dp.filter.s[1]
  pumDPTotal.dpControlled_dp.filter.s[2]
  pumDPVar.dpControlled_dp.filter.s[1]
  pumDPVar.dpControlled_dp.filter.s[2]
  pumDPVarOnOff.dpControlled_dp.filter.s[1]
  pumDPVarOnOff.dpControlled_dp.filter.s[2]
  pumSpeed.dpControlled_dp1.filter.s[1]
  pumSpeed.dpControlled_dp1.filter.s[2]
  val.filter.s[1]
  val.filter.s[2]
  val1.filter.s[1]
  val1.filter.s[2]
  val2.filter.s[1]
  val2.filter.s[2]
  val3.filter.s[1]
  val3.filter.s[2]
  val4.filter.s[1]
  val4.filter.s[2]
 
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("BESMod.Systems.Hydraulical.Components.PreconfiguredControlledMovers.PreconfiguredOptions.translation.log");