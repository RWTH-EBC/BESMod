


BESMod/Systems/Ventilation/BaseClasses/PartialVentilationSystem.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter RecordsCollection.SupplySystemBaseDataDefinition ventilationSystemParameters constrainedby RecordsCollection.SupplySystemBaseDataDefinition annotation (choicesAllMatching=true, Dialog(group="Design - Top Down: Parameters are given by the parent system"), Placement(transformation(extent={{-100,-98},{-80,-78}})));replaceable Generation.BaseClasses.PartialGeneration generation( dTTra_nominal=fill(1, generation.nParallelDem), m_flow_nominal=fill(1, generation.nParallelDem), dp_nominal=fill(0, generation.nParallelDem)) constrainedby Generation.BaseClasses.PartialGeneration( Q_flow_nominal={sum(distribution.Q_flow_nominal .* distribution.f_design)}, redeclare final package Medium = Medium, final energyDynamics=energyDynamics, final massDynamics=massDynamics, TOda_nominal=ventilationSystemParameters.TOda_nominal, final TDem_nominal=distribution.TSup_nominal, final TAmb=ventilationSystemParameters.TAmb, final p_start=p_start, final T_start=T_start, final X_start=X_start, final C_start=C_start, final C_nominal=C_nominal, final mSenFac=mSenFac, final allowFlowReversal=allowFlowReversal, final show_T=show_T, final rho=rho, final cp=cp, dpDem_nominal=fill(max(distribution.dp_nominal),generation.nParallelDem), final use_openModelica=use_openModelica) annotation (choicesAllMatching=true, Placement(transformation(extent={{26,-56}, {80,-2}})));replaceable Distribution.BaseClasses.PartialDistribution distribution( dTTra_nominal=fill(1, distribution.nParallelDem), m_flow_nominal=fill(1, distribution.nParallelDem), dp_nominal=fill(0, distribution.nParallelDem)) constrainedby Distribution.BaseClasses.PartialDistribution( redeclare package Medium = Medium, final nParallelDem=ventilationSystemParameters.nZones, final Q_flow_nominal=ventilationSystemParameters.Q_flow_nominal, TOda_nominal=ventilationSystemParameters.TOda_nominal, final TDem_nominal=ventilationSystemParameters.TSup_nominal, final TAmb=ventilationSystemParameters.TAmb, final energyDynamics=energyDynamics, final massDynamics=massDynamics, final p_start=p_start, final T_start=T_start, final X_start=X_start, final C_start=C_start, final C_nominal=C_nominal, final mSenFac=mSenFac, final allowFlowReversal=allowFlowReversal, final show_T=show_T, final rho=rho, final cp=cp, final use_openModelica=use_openModelica) annotation (choicesAllMatching=true, Placement(transformation(extent={{-60,-52},{-16,0}})));replaceable Control.BaseClasses.PartialControl control constrainedby Control.BaseClasses.PartialControl( final parGen( final nParallelDem=generation.nParallelDem, final nParallelSup=generation.nParallelSup, final Q_flow_nominal=generation.Q_flow_nominal, final TOda_nominal=ventilationSystemParameters.TOda_nominal, final TDem_nominal=generation.TDem_nominal, final TSup_nominal=generation.TSup_nominal, final dTTra_nominal=generation.dTTra_nominal, final m_flow_nominal=generation.m_flow_nominal, final dp_nominal=generation.dp_nominal, final dTLoss_nominal=generation.dTLoss_nominal, final f_design=generation.f_design, final QLoss_flow_nominal=generation.QLoss_flow_nominal), final parDis( final nParallelDem=distribution.nParallelDem, final nParallelSup=distribution.nParallelSup, final Q_flow_nominal=distribution.Q_flow_nominal, final TDem_nominal=distribution.TDem_nominal, final TSup_nominal=distribution.TSup_nominal, final dTTra_nominal=distribution.dTTra_nominal, final m_flow_nominal=distribution.m_flow_nominal, final dp_nominal=distribution.dp_nominal, final dTLoss_nominal=distribution.dTLoss_nominal, final f_design=distribution.f_design, final TOda_nominal=ventilationSystemParameters.TOda_nominal, final QLoss_flow_nominal=distribution.QLoss_flow_nominal), final use_openModelica=use_openModelica) annotation (choicesAllMatching= true, Placement(transformation(extent={{-26,22},{28,68}})));BESMod.Systems.Interfaces.VentilationOutputs outBusVen if not use_openModelica annotation (Placement(transformation(extent={{-10,-110},{10,-90}})));IBPSA.BoundaryConditions.WeatherData.Bus weaBus "Weather data bus" annotation (Placement(transformation(extent={{88,60}, {122,88}}), iconTransformation(extent={{90,-10},{110,10}})));

2: Name 'portVent_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vent. Affected line: Modelica.Fluid.Interfaces.FluidPort_a portVent_in[ ventilationSystemParameters.nZones]( redeclare final package Medium = Medium) "Inlet for the demand of ventilation" annotation (Placement(transformation(extent={{-110,50},{-90,70}}), iconTransformation(extent={{-110,30},{-90,50}})));

3: Name 'portVent_out' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vent. Affected line: Modelica.Fluid.Interfaces.FluidPort_b portVent_out[ ventilationSystemParameters.nZones]( redeclare final package Medium = Medium) "Outlet of the demand of Ventilation" annotation (Placement(transformation(extent={{-110,-70},{-90,-50}}), iconTransformation(extent={{-110,-48},{-90,-28}})));


BESMod/Systems/Demand/Building/TEASERThermalZone.mo
1: Name 'use_verboseEnergyBalance' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_verbose, Energy, Balance. Affected line: parameter Boolean use_verboseEnergyBalance=true "=false to disable the integration of the verbose energy balance";

2: Name 'dTComfort' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Comfort. Affected line: parameter Modelica.Units.SI.TemperatureDifference dTComfort=2 "Temperature difference to room set temperature at which the comfort is still acceptable. In DIN EN 15251, all temperatures below 22 Â°C - 2 K count as discomfort. Hence the default value. If your room set temperature is lower, consider using smaller values.";

3: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: AixLib.ThermalZones.ReducedOrder.ThermalZone.ThermalZone thermalZone[nZones]( redeclare each final package Medium = MediumZone, each final energyDynamics=energyDynamics, each final T_start=T_start, final zoneParam=zoneParam, each final use_MechanicalAirExchange=true, each final use_NaturalAirExchange=true, each final nPorts=if use_ventilation then 2 else 0) annotation (Placement( transformation(extent={{35,12},{-39,84}}, rotation=0)));

4: Missing documentation, Name 'constTSetRoom' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Room. Affected line: Modelica.Blocks.Sources.Constant constTSetRoom[nZones](final k= TSetZone_nominal) annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={70,80})));

5: Missing documentation, Name 'constVentRate' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vent, Rate. Affected line: Modelica.Blocks.Sources.Constant constVentRate[nZones](final k=ventRate) annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={70,20})));

6: Name 'QVent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vent. Affected line: Modelica.Blocks.Sources.RealExpression QVent[nZones](y= portVent_in.m_flow.*inStream(portVent_in.h_outflow) .+ portVent_out.m_flow .*portVent_out.h_outflow) if use_ventilation and use_verboseEnergyBalance "Internal gains" annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={-90,-216})));

7: Missing documentation, Name 'heatFlowSensorConv' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: heat, Sensor, Conv. Affected line: Modelica.Thermal.HeatTransfer.Sensors.HeatFlowSensor heatFlowSensorConv[ nZones] annotation (Placement(transformation(extent={{-80,40},{-60,60}})));

8: Missing documentation. Affected line: Modelica.Blocks.Math.Add addTra [nZones] if use_verboseEnergyBalance annotation (Placement(transformation(extent={{-10,10},{10,-10}}, rotation=0, origin={-90,-198})));

9: Missing documentation, Name 'realPassThroughIntGains' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: real, Pass, Through, Gains. Affected line: Modelica.Blocks.Routing.RealPassThrough realPassThroughIntGains[nZones,3] annotation (Placement(transformation(extent={{-100,0},{-80,20}})));

10: Missing documentation, Name 'realPassThroughTDry' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: real, Pass, Through. Affected line: Modelica.Blocks.Routing.RealPassThrough realPassThroughTDry[nZones] annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={70,50})));

11: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BESMod.Utilities.Electrical.RealToElecCon realToElecCon(use_souGen=false) annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={82,-148})));

12: Missing documentation. Affected line: Modelica.Blocks.Math.Gain gain(final k=if incElePro then 1 else 0) annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={68,-120})));

13: Missing documentation, Name 'multiSumEle' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: multi. Affected line: Modelica.Blocks.Math.MultiSum multiSumEle(final k=fill(1, multiSumEle.nu), nu=if use_absIntGai then 4*nZones else 2*nZones) annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={30,-120})));

14: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Utilities.KPIs.ZoneEnergyBalance zoneEneBal[nZones](each final with_ventilation=use_ventilation) if use_verboseEnergyBalance "Zone energy balance" annotation (Placement(transformation(extent={{-60,-200},{-22,-140}})));

15: Name 'QExtWall_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: Modelica.Blocks.Sources.RealExpression QExtWall_flow[nZones](y=thermalZone.ROM.extWall.Q_flow) if use_verboseEnergyBalance "External wall heat flow rate" annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={-90,-110})));

16: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Utilities.KPIs.ZoneTemperature zonTem[nZones](each final dTComfort=dTComfort, final TSetZone_nominal=TSetZone_nominal) "Zone temperature KPIs for air temperature" annotation (Placement(transformation(extent={{0,-50},{20,-30}})));Utilities.KPIs.ZoneTemperature zonTemOpe[nZones](each final dTComfort= dTComfort, final TSetZone_nominal=TSetZone_nominal) "Zone temperature KPIs for operative temperature" annotation (Placement(transformation(extent={{0,-80},{20,-60}})));

17: Name 'QRoof_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Roof. Affected line: Modelica.Blocks.Sources.RealExpression QRoof_flow[nZones](y=thermalZone.ROM.roof.Q_flow) if use_verboseEnergyBalance "Roof heat flow rate" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={-90,-120})));

18: Name 'QFloor_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Floor. Affected line: Modelica.Blocks.Sources.RealExpression QFloor_flow[nZones](y=thermalZone.ROM.floor.Q_flow) if use_verboseEnergyBalance "Floor heat flow rate" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={-90,-134})));


BESMod/Systems/Hydraulical/Transfer/IdealValveRadiator.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: IBPSA.Fluid.HeatExchangers.Radiators.RadiatorEN442_2 rad[nParallelDem]( each final allowFlowReversal=allowFlowReversal, final m_flow_nominal=m_flow_design, each final show_T=show_T, each final energyDynamics=energyDynamics, each final p_start=p_start, each final nEle=parRad.nEle, each final fraRad=parRad.fraRad, final Q_flow_nominal=Q_flow_design .* f_design, final T_a_nominal=TTra_design, final T_b_nominal=TTra_design - dTTra_design, final TAir_nominal=TDem_nominal, final TRad_nominal=TDem_nominal, each final n=parRad.n, each final deltaM=0.3, each final dp_nominal=0, redeclare package Medium = Medium, each final T_start=T_start) "Radiator" annotation (Placement(transformation( extent={{10,10},{-10,-10}}, rotation=90, origin={-10,-30})));IBPSA.Fluid.FixedResistances.PressureDrop res[nParallelDem]( redeclare package Medium = Medium, each final dp_nominal=parTra.dpHeaDistr_nominal+parTra.dpRad_nominal[1], final m_flow_nominal=m_flow_nominal) "Hydraulic resistance of supply and radiator to set dp allways to m_flow_nominal" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={-48,38})));

2: Missing documentation. Affected line: Modelica.Blocks.Math.Gain gain[nParallelDem](final k=rad.m_flow_nominal) annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={10,30})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter BESMod.Systems.Hydraulical.Transfer.RecordsCollection.RadiatorTransferData parRad "Radiator parameters" annotation (choicesAllMatching=true, Placement( transformation(extent={{-100,-98},{-80,-78}})));Utilities.KPIs.EnergyKPICalculator intKPICalHeaFlo(final use_inpCon=false, final y=sum(-heatPortRad.Q_flow) + sum(-heatPortCon.Q_flow)) annotation (Placement(transformation(extent={{-40,-80},{-20,-60}})));IBPSA.Fluid.Movers.Preconfigured.FlowControlled_m_flow pumFixMFlo[nParallelDem]( redeclare final package Medium = Medium, each final energyDynamics=energyDynamics, each final p_start=p_start, each final T_start=T_start, each final X_start=X_start, each final C_start=C_start, each final C_nominal=C_nominal, each final allowFlowReversal=allowFlowReversal, final m_flow_small=1E-4*abs(m_flow_nominal), each final show_T=show_T, final m_flow_nominal=m_flow_nominal, final dp_nominal=dp_nominal, each final addPowerToMedium=parPum.addPowerToMedium, each final tau=parPum.tau, each final use_riseTime=false, final m_flow_start=m_flow_nominal) annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-10,10})));replaceable parameter BESMod.Systems.RecordsCollection.Movers.MoverBaseDataDefinition parPum "Pump assumptions" annotation (choicesAllMatching=true, Placement(transformation(extent={{-98,78},{-78,98}})));BESMod.Utilities.Electrical.ZeroLoad zeroLoad annotation (Placement(transformation(extent={{30,-106},{50,-86}})));

4: Missing documentation. Affected line: Modelica.Blocks.Routing.RealPassThrough reaPasThrOpe[nParallelDem] annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={0,70})));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter RecordsCollection.TransferDataBaseDefinition parTra constrainedby RecordsCollection.TransferDataBaseDefinition( final Q_flow_nominal=Q_flow_design .* f_design, final nZones=nParallelDem, final AFloor=ABui, final heiBui=hBui, mRad_flow_nominal=m_flow_nominal, mHeaCir_flow_nominal=mSup_flow_nominal[1]) "Transfer parameters" annotation ( Dialog(group="Component data"), choicesAllMatching=true, Placement(transformation(extent={{-70,-98},{-50,-78}})));


BESMod/Systems/Hydraulical/Transfer/RadiatorPressureBased.mo
1: Name 'perPreRelValOpens' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Opens. Affected line: parameter Real perPreRelValOpens=0.99 "Percentage of nominal pressure difference at which the pressure relief valve starts to open" annotation(Dialog(group="Component choices", enable=use_preRelVal));

2: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter RecordsCollection.TransferDataBaseDefinition parTra constrainedby RecordsCollection.TransferDataBaseDefinition( final Q_flow_nominal=Q_flow_design .* f_design, final nZones=nParallelDem, final AFloor=ABui, final heiBui=hBui, mRad_flow_nominal=m_flow_nominal) "Transfer parameters" annotation ( Dialog(group="Component data"), choicesAllMatching=true, Placement(transformation(extent={{-62,-98},{-42,-78}})));replaceable parameter BESMod.Systems.RecordsCollection.Movers.MoverBaseDataDefinition parPum annotation (Dialog(group="Component data"), choicesAllMatching=true, Placement(transformation(extent={{-98,78}, {-72,100}})));replaceable parameter BESMod.Systems.Hydraulical.Transfer.RecordsCollection.RadiatorTransferData parRad annotation (Dialog(group="Component data"), choicesAllMatching=true, Placement(transformation(extent={{-100,-98},{-80,-78}})));IBPSA.Fluid.HeatExchangers.Radiators.RadiatorEN442_2 rad[nParallelDem]( each final allowFlowReversal=allowFlowReversal, final m_flow_nominal=m_flow_design, each final show_T=show_T, each final energyDynamics=energyDynamics, each final p_start=p_start, each final nEle=parRad.nEle, each final fraRad=parRad.fraRad, final Q_flow_nominal=Q_flow_design .* f_design, final T_a_nominal=TTra_design, final T_b_nominal=TTra_design .- dTTra_design, final TAir_nominal=TDem_nominal, final TRad_nominal=TDem_nominal, each final n=parRad.n, each final deltaM=0.3, each final dp_nominal=0, redeclare package Medium = Medium, each final T_start=T_start) "Radiator" annotation (Placement(transformation( extent={{11,11},{-11,-11}}, rotation=90, origin={-13,-25})));IBPSA.Fluid.FixedResistances.PressureDrop res[nParallelDem]( redeclare package Medium = Medium, each final dp_nominal=parTra.dpHeaDistr_nominal+parTra.dpRad_nominal[1], final m_flow_nominal=m_flow_nominal) "Hydraulic resistance of supply and radiator to set dp allways to m_flow_nominal" annotation (Placement(transformation( extent={{-12.5,-13.5},{12.5,13.5}}, rotation=0, origin={-34.5,37.5})));IBPSA.Fluid.Actuators.Valves.TwoWayLinear val[nParallelDem]( redeclare package Medium = Medium, each final allowFlowReversal=allowFlowReversal, final m_flow_nominal=m_flow_nominal, each final show_T=show_T, each final CvData=IBPSA.Fluid.Types.CvTypes.OpPoint, final dpValve_nominal=parTra.dpHeaSysValve_nominal, each final use_strokeTime=false, final dpFixed_nominal=parTra.dpHeaSysPreValve_nominal, each final l=parTra.leakageOpening) annotation (Placement(transformation( extent={{-10,-11},{10,11}}, rotation=270, origin={-12,1})));IBPSA.Fluid.MixingVolumes.MixingVolume vol( redeclare package Medium = Medium, final energyDynamics=energyDynamics, final p_start=p_start, final T_start=T_start, final mSenFac=1, final m_flow_nominal=sum(rad.m_flow_nominal), final m_flow_small=1E-4*abs(sum(rad.m_flow_nominal)), final allowFlowReversal=allowFlowReversal, final V(displayUnit="l") = parTra.vol, final use_C_flow=false, nPorts=1 + nParallelDem) annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={-58,18})));IBPSA.Fluid.Movers.Preconfigured.SpeedControlled_y pump( redeclare final package Medium = Medium, final energyDynamics=energyDynamics, final p_start=p_start, final T_start=T_start, final allowFlowReversal=allowFlowReversal, final show_T=show_T, final m_flow_nominal=sum(m_flow_nominal), final dp_nominal=parTra.dpPumpHeaCir_nominal + dpSup_nominal[1], final addPowerToMedium=parPum.addPowerToMedium, final tau=parPum.tau, final use_riseTime=parPum.use_riseTime, final riseTime=parPum.riseTimeInpFilter, final y_start=1) annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={-74,38})));

3: Missing documentation, Name 'm_flow1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m_flow. Affected line: Modelica.Blocks.Sources.Constant m_flow1(k=1) annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={-48,68})));

4: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BESMod.Utilities.Electrical.RealToElecCon realToElecCon(use_souGen=false) annotation (Placement(transformation(extent={{34,-94},{54,-74}})));Distribution.Components.Valves.PressureReliefValve pressureReliefValve( redeclare final package Medium = Medium, m_flow_nominal=mSup_flow_nominal[1], final dpFullOpen_nominal=dp_nominal[1], final dpThreshold_nominal=perPreRelValOpens*dp_nominal[1], final facDpValve_nominal=parTra.valveAutho[1], final l=parTra.leakageOpening) if use_preRelVal annotation (Placement( transformation( extent={{10,-10},{-10,10}}, rotation=90, origin={-90,-10})));

5: Missing documentation. Affected line: Modelica.Blocks.Routing.RealPassThrough reaPasThrOpe[nParallelDem] annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={30,70})));


BESMod/Systems/Hydraulical/Distribution/DistributionTwoStorageParallel.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: AixLib.Fluid.Storage.StorageSimple stoDHW( redeclare final package Medium = MediumDHW, final n=parStoDHW.nLayer, final d=parStoDHW.d, final h=parStoDHW.h, final lambda_ins=parStoDHW.lambda_ins, final s_ins=parStoDHW.sIns, final hConIn=parStoDHW.hConIn, final hConOut=parStoDHW.hConOut, final k_HE=parStoDHW.k_HE, final A_HE=parStoDHW.A_HE, final V_HE=parStoDHW.V_HE, final beta=parStoDHW.beta, final kappa=parStoDHW.kappa, final m_flow_nominal_layer=mDHW_flow_nominal, final m_flow_nominal_HE=mSup_flow_nominal[1], final energyDynamics=energyDynamics, T_start=fill(TDHW_nominal, parStoDHW.nLayer), final p_start=p_start, final m_flow_small_layer=1E-4*abs(stoDHW.m_flow_nominal_layer), final m_flow_small_layer_HE=1E-4*abs(stoDHW.m_flow_nominal_HE)) "The DHW storage (TWWS) for domestic hot water demand" annotation (Placement(transformation(extent={{66,-70},{32,-32}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: AixLib.Fluid.Storage.StorageSimple stoBuf( redeclare package Medium = Medium, final n=parStoBuf.nLayer, final d=parStoBuf.d, final h=parStoBuf.h, final lambda_ins=parStoBuf.lambda_ins, final s_ins=parStoBuf.sIns, final hConIn=parStoBuf.hConIn, final hConOut=parStoBuf.hConOut, final k_HE=parStoBuf.k_HE, final A_HE=parStoBuf.A_HE, final V_HE=parStoBuf.V_HE, final beta=parStoBuf.beta, final kappa=parStoBuf.kappa, final m_flow_nominal_layer=m_flow_design[1], final m_flow_nominal_HE=mSup_flow_design[1], final energyDynamics=energyDynamics, T_start=fill(T_start, parStoBuf.nLayer), final p_start=p_start, final m_flow_small_layer=1E-4*abs(stoBuf.m_flow_nominal_layer), final m_flow_small_layer_HE=1E-4*abs(stoBuf.m_flow_nominal_HE)) "The buffer storage (PS) for the building" annotation (Placement(transformation(extent={{66,40},{32,76}})));Components.Valves.ThreeWayValveWithFlowReturn threeWayValveWithFlowReturn( redeclare package Medium = MediumGen, final energyDynamics=energyDynamics, final p_start=p_start, final T_start=T_start, final X_start=X_start, final C_start=C_start, final C_nominal=C_nominal, final mSenFac=mSenFac, redeclare BESMod.Systems.RecordsCollection.Valves.DefaultThreeWayValve parameters=parThrWayVal) annotation (Placement(transformation(extent={{-60,40},{-20,80}})));

3: Documentation too short, Name 'T_stoDHWTop' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_sto, D, W. Affected line: Modelica.Blocks.Sources.RealExpression T_stoDHWTop(final y(unit="K", displayUnit="degC")=stoDHW.layer[ parStoDHW.nLayer].T) annotation (Placement(transformation( extent={{-5,-3},{5,3}}, rotation=180, origin={37,87})));

4: Documentation too short, Name 'T_stoBufTop' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_sto. Affected line: Modelica.Blocks.Sources.RealExpression T_stoBufTop(final y(unit="K", displayUnit="degC")=stoBuf.layer[ parStoBuf.nLayer].T) annotation (Placement(transformation( extent={{-5,-2},{5,2}}, rotation=180, origin={23,92})));

5: Documentation too short, Name 'T_stoBufBot' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_sto. Affected line: Modelica.Blocks.Sources.RealExpression T_stoBufBot(final y(unit="K", displayUnit="degC")=stoBuf.layer[1].T) annotation (Placement(transformation( extent={{-5,-3},{5,3}}, rotation=180, origin={23,87})));

6: Documentation too short, Name 'T_stoDHWBot' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_sto, D, W. Affected line: Modelica.Blocks.Sources.RealExpression T_stoDHWBot(final y(unit="K", displayUnit="degC")=stoDHW.layer[1].T) annotation (Placement(transformation( extent={{-5,-3},{5,3}}, rotation=180, origin={37,99})));

7: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter BESMod.Systems.Hydraulical.Distribution.RecordsCollection.SimpleStorage.SimpleStorageBaseDataDefinition parStoBuf constrainedby BESMod.Systems.Hydraulical.Distribution.RecordsCollection.SimpleStorage.SimpleStorageBaseDataDefinition( final Q_flow_nominal=Q_flow_design[1]*f_design[1], final rho=rho, final c_p=cp, final TAmb=TAmb, final T_m=TDem_nominal[1], final QHC1_flow_nominal=Q_flow_design[1], final mHC1_flow_nominal=mSup_flow_design[1]) annotation ( choicesAllMatching=true, Placement(transformation(extent={{84,56},{98,70}})));replaceable parameter BESMod.Systems.Hydraulical.Distribution.RecordsCollection.SimpleStorage.SimpleStorageBaseDataDefinition parStoDHW constrainedby BESMod.Systems.Hydraulical.Distribution.RecordsCollection.SimpleStorage.SimpleStorageBaseDataDefinition( final rho=rho, final c_p=cp, final TAmb=TAmb, final QHC1_flow_nominal=QDHW_flow_nominal, V=if designType == Types.DHWDesignType.FullStorage then VDHWDay * fFullSto else VDHWDay, final Q_flow_nominal=0, final VPerQ_flow=0, final T_m=TDHW_nominal, final mHC1_flow_nominal=mSup_flow_design[1]) annotation ( choicesAllMatching=true, Placement(transformation(extent={{82,-58},{98,-42}})));

8: Name 'fixTemDHW' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: D, W. Affected line: Modelica.Thermal.HeatTransfer.Sources.FixedTemperature fixTemDHW(final T= parStoDHW.TAmb) "Constant ambient temperature of storage" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={30,-90})));


BESMod/Systems/Demand/Building/AixLibHighOrder.mo
1: Name 'ventRate' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: vent, Rate. Affected line: parameter Real ventRate[nZones]=fill(0, nZones) if useConstVentRate "Constant mechanical ventilation rate" annotation (Dialog(enable=useConstVentRate));

2: Name 'TSoil' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Soil. Affected line: parameter Modelica.Units.SI.Temperature TSoil=281.65 "Temperature of soil";

3: Name 'GroundReflectance' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ground, Reflectance. Affected line: parameter Real GroundReflectance = 0.2 "ground reflectance coefficient";

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: AixLib.Utilities.Interfaces.Adaptors.ConvRadToCombPort convRadToCombPort[nZones] annotation (Placement(transformation(extent={{-40,-4},{-60,-20}})));replaceable Components.AixLibHighOrderOFD HOMBuiEnv( use_ventilation=use_ventilation, redeclare package MediumZone = MediumZone, energyDynamicsWalls=energyDynamicsWalls, energyDynamics=energyDynamics, T0_air=T0_air, TWalls_start=TWalls_start, redeclare model WindowModel = WindowModel (windowarea=2), redeclare model CorrSolarGainWin = CorrSolarGainWin, use_sunblind=use_sunblind, UValOutDoors=UValOutDoors, use_infiltEN12831=use_infiltEN12831, n50=n50, e=e, Type_Win=Type_Win, wallTypes=wallTypes) "High order building envelope" annotation ( choicesAllMatching=true, Placement(transformation(extent={{-22,-36},{38,34}})));

5: Missing documentation, Name 'constVentRate' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vent, Rate. Affected line: Modelica.Blocks.Sources.Constant constVentRate[nZones](final k=ventRate) if useConstVentRate annotation (Placement(transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={-90,10})));

6: Missing documentation, Name 'InternalGains' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Internal, Gains. Affected line: Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow InternalGains[nZones] annotation (Placement(transformation( extent={{10,-10},{-10,10}}, rotation=0, origin={-50,-50})));

7: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Utilities.Electrical.ZeroLoad zeroLoad annotation (Placement(transformation(extent={{24,-108},{44,-88}})));

8: Missing documentation, Name 'outdoorTemperature' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: outdoor, Temperature. Affected line: Modelica.Thermal.HeatTransfer.Sources.PrescribedTemperature outdoorTemperature annotation (Placement(transformation( extent={{-7,-7},{7,7}}, rotation=270, origin={-45,51})));

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Components.RadOnTitledSurfaceIBPSA radOnTitledSurfaceAdaptor[SOD.nSurfaces]( final til=SOD.Tilt .* Modelica.Constants.pi ./ 180, each final rho=GroundReflectance, final azi=SOD.Azimut .* Modelica.Constants.pi ./ 180) "Adapt weather bus to HOM " annotation (Placement(transformation(extent={{0,40},{20,60}})));


BESMod/Systems/Ventilation/Distribution/BaseClasses/PartialDistribution.mo
1: Name 'portSupply_out' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Supply. Affected line: Modelica.Fluid.Interfaces.FluidPort_b portSupply_out[nParallelDem]( redeclare final package Medium = Medium) "Outlet of the demand of Ventilation" annotation (Placement(transformation( extent={{-110,50},{-90,70}}), iconTransformation(extent={{-110,30},{-90, 50}})));

2: Name 'portSupply_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Supply. Affected line: Modelica.Fluid.Interfaces.FluidPort_a portSupply_in[nParallelSup](redeclare final package Medium = Medium) "Inlet for the demand of ventilation" annotation (Placement(transformation( extent={{90,50},{110,70}}), iconTransformation(extent={{90,30},{110,50}})));


BESMod/Systems/Electrical/Transfer/IdealHeater.mo
1: Name 'TN_heater' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N_heater. Affected line: parameter Modelica.Units.SI.Time TN_heater=1 "Time constant of the heating controller";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Utilities.Electrical.RealToElecCon realToElecCon(use_souGen=false) annotation (Placement(transformation(extent={{20,60},{40,80}})));AixLib.Utilities.Sources.HeaterCooler.HeaterCoolerPI heaterCooler[nParallelDem]( h_heater=Q_flow_nominal .* 1.5, each final l_heater=0, each final KR_heater=KR_heater, each final TN_heater=TN_heater, each final zoneParam=AixLib.DataBase.ThermalZones.ZoneRecordDummy(), each recOrSep=false, each Heater_on=true, each Cooler_on=false, each final staOrDyn=false) "Heater Cooler with PI control" annotation (Placement(transformation(extent={{-62,0},{-20,40}})));

3: Missing documentation. Affected line: Modelica.Thermal.HeatTransfer.Sources.FixedHeatFlow fixHeaFlo[nParallelDem]( each final Q_flow=0) annotation (Placement(transformation(extent={{40,-40},{60,-20}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Utilities.KPIs.EnergyKPICalculator heaKPI[nParallelDem](each final use_inpCon= true) "Heating power KPI" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={0,-40})));

5: Missing documentation. Affected line: Modelica.Blocks.Math.Sum sum1(nin=nParallelDem) annotation (Placement(transformation(extent={{-40,60},{-20,80}})));