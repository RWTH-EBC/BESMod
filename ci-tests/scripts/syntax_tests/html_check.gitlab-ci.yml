# Variables
# image_name : registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-micromamba-alternative
# ci_stage_html_check : HTML_Check
# ci_stage_html_whitelist : create_html_whitelist
# ci_stage_open_PR : open_PR
# html_praefix : correct_HTML_
# ModelicaPyCI.syntax.html_tidy : modelicapyci_html_tidy_module
# arg_correct_html: --filter-whitelist-flag  --log-flag  --correct-overwrite-flag  --whitelist-library IBPSA --library BESMod --packages Examples Tutorial Utilities Systems 
# result_dir : ci-tests/result
# expire_in_time : 7h
# library : BESMod
# ci_html_commit : ci_html
# ModelicaPyCI.api_script.api_github : modelicapyci_api_github_module
# arg_push : --filter-whitelist-flag  --correct-view-flag  --log-flag  --whitelist-library IBPSA --library BESMod --packages Examples Tutorial Utilities Systems 
# arg_wh : --filter-whitelist-flag  --log-flag  --whitelist-library IBPSA 
# bot_create_html_file_commit : CI message from ebc-aixlib-bot. Push new files with corrected html Syntax .

include: 'ci-tests/scripts/utilities.yml'

image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-micromamba-alternative
stages:
    - HTML_Check
    - create_html_whitelist
    - open_PR

variables:
    Praefix_Branch: correct_HTML_
    Newbranch: $Praefix_Branch$CI_COMMIT_REF_NAME



Check_HTML:push:
    stage: HTML_Check
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
    script:
        - python -m ModelicaPyCI.syntax.html_tidy --filter-whitelist-flag  --correct-view-flag  --log-flag  --whitelist-library IBPSA --library BESMod --packages Examples Tutorial Utilities Systems 
    after_script:
        - if ! cat ci-tests/Configfiles/exit.sh | grep "Syntax Error"; then
            exit 0;
          fi
        - !reference [.activate_python_and_install_requirements, script]
        - !reference [.github_ssh_auth, script]
        - python -m ModelicaPyCI.syntax.html_tidy --filter-whitelist-flag  --log-flag  --correct-overwrite-flag  --whitelist-library IBPSA --library BESMod --packages Examples Tutorial Utilities Systems ;
        - if [[ $CI_COMMIT_REF_NAME =~ ^$Praefix_Branch ]]; then
            echo "Branch is already used to fix html, exiting";
            exit 1;
          fi
        - git checkout -B $Newbranch;
        - git add BESMod;
        - git commit -m "CI message from ebc-aixlib-bot. Push new files with corrected html Syntax .";
        - git push git@github.com:$Github_Repository.git;
        - exit 1;

    artifacts:
        paths:
            - ci-tests/result/
        expire_in: 7h
    rules:
        - if: $CI_COMMIT_MESSAGE  =~ /ci_html/ && $CI_PIPELINE_SOURCE == "push"
          when: always
        - !reference [.rules:push , rules]

Check_HTML:changed:
    stage: HTML_Check
    before_script:
        - !reference [.github_ssh_auth, script]
        - !reference [.activate_python_and_install_requirements, script]
    script:
        - python -m ModelicaPyCI.syntax.html_tidy --filter-whitelist-flag  --correct-view-flag  --log-flag  --whitelist-library IBPSA --library BESMod --packages Examples Tutorial Utilities Systems 
    artifacts:
        paths:
            - ci-tests/result/
        expire_in: 7h
    rules:
        - !reference [.rules:changed , rules]

Open_Pull_HTML_Request:
    stage: open_PR
    before_script:
        - !reference [.github_ssh_auth, script]
        - !reference [.activate_python_and_install_requirements, script]
    script:
        - python -m ModelicaPyCI.api_script.api_github --correct-html-flag  --create-pr-flag  --github-token $GITHUB_API_TOKEN --main-branch main --working-branch $CI_COMMIT_REF_NAME --library BESMod --github-repository RWTH-EBC/BESMod 
    rules:
        - if: $CI_COMMIT_MESSAGE =~ /CI message from ebc-aixlib-bot. Push new files with corrected html Syntax ./ && $CI_COMMIT_BRANCH =~ /^correct_HTML_.*$/ && $CI_PIPELINE_SOURCE == "push"
          when: on_success


html_whitelist_job:
    stage: create_html_whitelist
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
        - !reference [.github_ssh_auth, script]
    script:
        - python -m ModelicaPyCI.syntax.html_tidy --filter-whitelist-flag  --log-flag  --whitelist-library IBPSA 
        - message="CI message from ebc-aixlib-bot. Update or created new whitelist. Please pull the new whitelist before push again."
        - files_to_push="ibpsa_whitelist.txt"
        - !reference [.git_push, script]
    artifacts:
        paths:
            - ci-tests/result/
        expire_in: 7 day
    rules:
        - if: $CI_COMMIT_MESSAGE =~ /ci_create_html_whitelist/ && $CI_PIPELINE_SOURCE == "push"
          when: always
