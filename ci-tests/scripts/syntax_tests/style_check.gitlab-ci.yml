# Variables
# image_name : registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-micromamba
# ci_stage_style_check : Style_check
# modelicapyci_syntax_test_module : ModelicaPyCI.syntax.style_checking
# xvfb_flag : xvfb-run -n 77
# library : BESMod
# ci_style_commit : ci_style_check
# result_dir : ci-tests/result
# arg_push : --startup-mos startup.mos --min-number-of-unused-licences 5 --library BESMod 
# arg_changed : --changed-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --library BESMod 

include: 'ci-tests/scripts/utilities.yml'
stages:
    - Style_check


StyleCheck:BESMod:push:
    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-micromamba
    stage: Style_check
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
    script:
        - xvfb-run -n 77 python -m ModelicaPyCI.syntax.style_checking --startup-mos startup.mos --min-number-of-unused-licences 5 --library BESMod 
    artifacts:
        when: on_failure
        paths:
            - ci-tests/result/
        expire_in: 7 day
    allow_failure: true
    rules:
        - if: $CI_COMMIT_MESSAGE  =~ /ci_style_check/ && $CI_PIPELINE_SOURCE == "push"
          when: always
        - !reference [.rules:push , rules]

StyleCheck:BESMod:changed:
    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-micromamba
    stage: Style_check
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
    script:
        - xvfb-run -n 77 python -m ModelicaPyCI.syntax.style_checking --changed-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --library BESMod 
    artifacts:
        when: on_failure
        paths:
            - ci-tests/result/
        expire_in: 7 day
    allow_failure: true
    rules:
        - !reference [.rules:changed , rules]

