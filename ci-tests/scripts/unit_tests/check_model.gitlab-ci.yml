# Variables
# dym_image_name: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-miniconda
# ci_stage_model_check: model_check
# ci_stage_create_whitelist: create_model_whitelist
# library: BESMod
# ci_check_commit: ci_check
# xvfb_flag: xvfb-run -n 77
# modelicapyci_test_validate_module: ModelicaPyCI.unittest.validatetest
# result_dir: ci-tests/result
# expire_in_time: 7h
# ci_create_model_whitelist_commit: ci_create_model_whitelist
# arg_changed: --dym-options DYM_CHECK --filter-whitelist-flag  --changed-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --additional-libraries-to-load  --packages $lib_package --library BESMod 
# arg_push: --dym-options DYM_CHECK --filter-whitelist-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --additional-libraries-to-load  --packages $lib_package --library BESMod 
# config_ci_exit_file: ci-tests/Configfiles/exit.sh
# bot_update_model_whitelist_commit: CI message from ebc-aixlib-bot. Update file whitelist-check_file. Please pull the new files before push again.
# whitelist_model_file: dymola_check_whitelist.txt
# arg_wh: --dym-options DYM_CHECK --create-whitelist-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --additional-libraries-to-load  --packages Examples Tutorial Utilities Systems --library BESMod 
# packages_per_job: {'Examples': 'Examples', 'Systems': 'Systems', 'Other': 'Tutorial Utilities'}
# modelicapyci_config_structure_module: ModelicaPyCI.structure.config_structure

include: 'ci-tests/scripts/utilities.yml'

stages:
    - model_check
    - create_model_whitelist


.check_model_job:push:
    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-miniconda
    stage: model_check
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
        - !reference [.custom_install_additional_modelica_libraries, script]
    script:
        - xvfb-run -n 77 python -m ModelicaPyCI.unittest.validatetest --dym-options DYM_CHECK --filter-whitelist-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --additional-libraries-to-load  --packages $lib_package --library BESMod 
    artifacts:
        when: on_failure
        paths:
            - ci-tests/result/
        expire_in: 7h
    rules:
        - if: $CI_COMMIT_MESSAGE  =~ /ci_check/ && $CI_PIPELINE_SOURCE == "push"
          when: always
        - !reference [.rules:push , rules]

.check_model_job:changed:
    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-miniconda
    stage: model_check
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
        - !reference [.custom_install_additional_modelica_libraries, script]
    script:
        - xvfb-run -n 77 python -m ModelicaPyCI.unittest.validatetest --dym-options DYM_CHECK --filter-whitelist-flag  --changed-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --additional-libraries-to-load  --packages $lib_package --library BESMod 
    artifacts:
        when: on_failure
        paths:
            - ci-tests/result/
        expire_in: 7h
    rules:
        - !reference [.rules:changed , rules]

Check_BESMod_Examples:push:
    variables:
        lib_package: Examples
    extends: .check_model_job:push

Check_BESMod_Systems:push:
    variables:
        lib_package: Systems
    extends: .check_model_job:push

Check_BESMod_Other:push:
    variables:
        lib_package: Tutorial Utilities
    extends: .check_model_job:push


Check_BESMod_Examples:changed:
    variables:
        lib_package: Examples
    extends: .check_model_job:changed

Check_BESMod_Systems:changed:
    variables:
        lib_package: Systems
    extends: .check_model_job:changed

Check_BESMod_Other:changed:
    variables:
        lib_package: Tutorial Utilities
    extends: .check_model_job:changed


check_whitelist_job:
    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-miniconda
    stage: create_model_whitelist
    before_script:
        - !reference [.activate_python_and_install_requirements, script]
        - !reference [.custom_install_additional_modelica_libraries, script]
        - !reference [.github_ssh_auth, script]

    script:
        - xvfb-run -n 77 python -m ModelicaPyCI.unittest.validatetest --dym-options DYM_CHECK --create-whitelist-flag  --startup-mos startup.mos --min-number-of-unused-licences 5 --additional-libraries-to-load  --packages Examples Tutorial Utilities Systems --library BESMod 
    after_script:
        - if ! cat ci-tests/Configfiles/exit.sh | grep "FAIL"; then
            exit 0;
          fi
        - message="CI message from ebc-aixlib-bot. Update file whitelist-check_file. Please pull the new files before push again."
        - files_to_push="dymola_check_whitelist.txt"
        - !reference [.git_push, script]
        - cd whitelist && cd $CI_PROJECT_NAME
    artifacts:
        paths:
            - ci-tests/result/
        expire_in: 7h
    rules:
        - if: $CI_COMMIT_MESSAGE =~ /ci_create_model_whitelist/ && $CI_PIPELINE_SOURCE == "push"
          when: always
